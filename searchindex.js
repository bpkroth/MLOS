Search.setIndex({"docnames": ["api/mlos_bench/mlos_bench", "api/mlos_bench/mlos_bench.environment", "api/mlos_bench/mlos_bench.environment.base_environment", "api/mlos_bench/mlos_bench.environment.composite_env", "api/mlos_bench/mlos_bench.environment.local", "api/mlos_bench/mlos_bench.environment.local.local_env", "api/mlos_bench/mlos_bench.environment.local.local_env_fileshare", "api/mlos_bench/mlos_bench.environment.mock_env", "api/mlos_bench/mlos_bench.environment.remote", "api/mlos_bench/mlos_bench.environment.remote.os_env", "api/mlos_bench/mlos_bench.environment.remote.remote_env", "api/mlos_bench/mlos_bench.environment.remote.vm_env", "api/mlos_bench/mlos_bench.environment.status", "api/mlos_bench/mlos_bench.launcher", "api/mlos_bench/mlos_bench.optimizer", "api/mlos_bench/mlos_bench.optimizer.base_optimizer", "api/mlos_bench/mlos_bench.optimizer.convert_configspace", "api/mlos_bench/mlos_bench.optimizer.mlos_core_optimizer", "api/mlos_bench/mlos_bench.optimizer.mock_optimizer", "api/mlos_bench/mlos_bench.run_bench", "api/mlos_bench/mlos_bench.run_opt", "api/mlos_bench/mlos_bench.service", "api/mlos_bench/mlos_bench.service.base_fileshare", "api/mlos_bench/mlos_bench.service.base_service", "api/mlos_bench/mlos_bench.service.config_persistence", "api/mlos_bench/mlos_bench.service.local", "api/mlos_bench/mlos_bench.service.local.local_exec", "api/mlos_bench/mlos_bench.service.remote", "api/mlos_bench/mlos_bench.service.remote.azure", "api/mlos_bench/mlos_bench.service.remote.azure.azure_fileshare", "api/mlos_bench/mlos_bench.service.remote.azure.azure_services", "api/mlos_bench/mlos_bench.service.remote.ssh", "api/mlos_bench/mlos_bench.tunables", "api/mlos_bench/mlos_bench.tunables.covariant_group", "api/mlos_bench/mlos_bench.tunables.tunable", "api/mlos_bench/mlos_bench.tunables.tunable_groups", "api/mlos_bench/mlos_bench.util", "api/mlos_bench/modules", "api/mlos_core/mlos_core", "api/mlos_core/mlos_core.optimizers", "api/mlos_core/mlos_core.optimizers.bayesian_optimizers", "api/mlos_core/mlos_core.optimizers.optimizer", "api/mlos_core/mlos_core.optimizers.random_optimizer", "api/mlos_core/mlos_core.spaces", "api/mlos_core/mlos_core.spaces.adapters", "api/mlos_core/mlos_core.spaces.adapters.adapter", "api/mlos_core/mlos_core.spaces.adapters.identity_adapter", "api/mlos_core/mlos_core.spaces.adapters.llamatune", "api/mlos_core/modules", "generated/mlos_bench.environment.CompositeEnv", "generated/mlos_bench.environment.Environment", "generated/mlos_bench.environment.MockEnv", "generated/mlos_bench.environment.Status", "generated/mlos_bench.environment.local.LocalEnv", "generated/mlos_bench.environment.local.LocalFileShareEnv", "generated/mlos_bench.environment.remote.OSEnv", "generated/mlos_bench.environment.remote.RemoteEnv", "generated/mlos_bench.environment.remote.VMEnv", "generated/mlos_bench.optimizer.MlosCoreOptimizer", "generated/mlos_bench.optimizer.MockOptimizer", "generated/mlos_bench.optimizer.Optimizer", "generated/mlos_bench.service.ConfigPersistenceService", "generated/mlos_bench.service.FileShareService", "generated/mlos_bench.service.Service", "generated/mlos_bench.service.local.LocalExecService", "generated/mlos_bench.service.remote.azure.AzureFileShareService", "generated/mlos_bench.service.remote.azure.AzureVMService", "generated/mlos_bench.tunables.Tunable", "generated/mlos_bench.tunables.TunableGroups", "generated/mlos_core.optimizers.OptimizerFactory", "generated/mlos_core.optimizers.OptimizerFactory.create", "generated/mlos_core.optimizers.OptimizerType", "generated/mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer", "generated/mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer", "generated/mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer", "generated/mlos_core.optimizers.optimizer.BaseOptimizer", "generated/mlos_core.optimizers.random_optimizer.RandomOptimizer", "generated/mlos_core.spaces.adapters.SpaceAdapterFactory", "generated/mlos_core.spaces.adapters.SpaceAdapterFactory.create", "generated/mlos_core.spaces.adapters.SpaceAdapterType", "generated/mlos_core.spaces.adapters.adapter.BaseSpaceAdapter", "generated/mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter", "generated/mlos_core.spaces.configspace_to_emukit_space", "generated/mlos_core.spaces.configspace_to_skopt_space", "index", "installation", "overview"], "filenames": ["api/mlos_bench/mlos_bench.rst", "api/mlos_bench/mlos_bench.environment.rst", "api/mlos_bench/mlos_bench.environment.base_environment.rst", "api/mlos_bench/mlos_bench.environment.composite_env.rst", "api/mlos_bench/mlos_bench.environment.local.rst", "api/mlos_bench/mlos_bench.environment.local.local_env.rst", "api/mlos_bench/mlos_bench.environment.local.local_env_fileshare.rst", "api/mlos_bench/mlos_bench.environment.mock_env.rst", "api/mlos_bench/mlos_bench.environment.remote.rst", "api/mlos_bench/mlos_bench.environment.remote.os_env.rst", "api/mlos_bench/mlos_bench.environment.remote.remote_env.rst", "api/mlos_bench/mlos_bench.environment.remote.vm_env.rst", "api/mlos_bench/mlos_bench.environment.status.rst", "api/mlos_bench/mlos_bench.launcher.rst", "api/mlos_bench/mlos_bench.optimizer.rst", "api/mlos_bench/mlos_bench.optimizer.base_optimizer.rst", "api/mlos_bench/mlos_bench.optimizer.convert_configspace.rst", "api/mlos_bench/mlos_bench.optimizer.mlos_core_optimizer.rst", "api/mlos_bench/mlos_bench.optimizer.mock_optimizer.rst", "api/mlos_bench/mlos_bench.run_bench.rst", "api/mlos_bench/mlos_bench.run_opt.rst", "api/mlos_bench/mlos_bench.service.rst", "api/mlos_bench/mlos_bench.service.base_fileshare.rst", "api/mlos_bench/mlos_bench.service.base_service.rst", "api/mlos_bench/mlos_bench.service.config_persistence.rst", "api/mlos_bench/mlos_bench.service.local.rst", "api/mlos_bench/mlos_bench.service.local.local_exec.rst", "api/mlos_bench/mlos_bench.service.remote.rst", "api/mlos_bench/mlos_bench.service.remote.azure.rst", "api/mlos_bench/mlos_bench.service.remote.azure.azure_fileshare.rst", "api/mlos_bench/mlos_bench.service.remote.azure.azure_services.rst", "api/mlos_bench/mlos_bench.service.remote.ssh.rst", "api/mlos_bench/mlos_bench.tunables.rst", "api/mlos_bench/mlos_bench.tunables.covariant_group.rst", "api/mlos_bench/mlos_bench.tunables.tunable.rst", "api/mlos_bench/mlos_bench.tunables.tunable_groups.rst", "api/mlos_bench/mlos_bench.util.rst", "api/mlos_bench/modules.rst", "api/mlos_core/mlos_core.rst", "api/mlos_core/mlos_core.optimizers.rst", "api/mlos_core/mlos_core.optimizers.bayesian_optimizers.rst", "api/mlos_core/mlos_core.optimizers.optimizer.rst", "api/mlos_core/mlos_core.optimizers.random_optimizer.rst", "api/mlos_core/mlos_core.spaces.rst", "api/mlos_core/mlos_core.spaces.adapters.rst", "api/mlos_core/mlos_core.spaces.adapters.adapter.rst", "api/mlos_core/mlos_core.spaces.adapters.identity_adapter.rst", "api/mlos_core/mlos_core.spaces.adapters.llamatune.rst", "api/mlos_core/modules.rst", "generated/mlos_bench.environment.CompositeEnv.rst", "generated/mlos_bench.environment.Environment.rst", "generated/mlos_bench.environment.MockEnv.rst", "generated/mlos_bench.environment.Status.rst", "generated/mlos_bench.environment.local.LocalEnv.rst", "generated/mlos_bench.environment.local.LocalFileShareEnv.rst", "generated/mlos_bench.environment.remote.OSEnv.rst", "generated/mlos_bench.environment.remote.RemoteEnv.rst", "generated/mlos_bench.environment.remote.VMEnv.rst", "generated/mlos_bench.optimizer.MlosCoreOptimizer.rst", "generated/mlos_bench.optimizer.MockOptimizer.rst", "generated/mlos_bench.optimizer.Optimizer.rst", "generated/mlos_bench.service.ConfigPersistenceService.rst", "generated/mlos_bench.service.FileShareService.rst", "generated/mlos_bench.service.Service.rst", "generated/mlos_bench.service.local.LocalExecService.rst", "generated/mlos_bench.service.remote.azure.AzureFileShareService.rst", "generated/mlos_bench.service.remote.azure.AzureVMService.rst", "generated/mlos_bench.tunables.Tunable.rst", "generated/mlos_bench.tunables.TunableGroups.rst", "generated/mlos_core.optimizers.OptimizerFactory.rst", "generated/mlos_core.optimizers.OptimizerFactory.create.rst", "generated/mlos_core.optimizers.OptimizerType.rst", "generated/mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer.rst", "generated/mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer.rst", "generated/mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer.rst", "generated/mlos_core.optimizers.optimizer.BaseOptimizer.rst", "generated/mlos_core.optimizers.random_optimizer.RandomOptimizer.rst", "generated/mlos_core.spaces.adapters.SpaceAdapterFactory.rst", "generated/mlos_core.spaces.adapters.SpaceAdapterFactory.create.rst", "generated/mlos_core.spaces.adapters.SpaceAdapterType.rst", "generated/mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.rst", "generated/mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.rst", "generated/mlos_core.spaces.configspace_to_emukit_space.rst", "generated/mlos_core.spaces.configspace_to_skopt_space.rst", "index.rst", "installation.rst", "overview.rst"], "titles": ["mlos_bench package", "mlos_bench.environment package", "mlos_bench.environment.base_environment module", "mlos_bench.environment.composite_env module", "mlos_bench.environment.local package", "mlos_bench.environment.local.local_env module", "mlos_bench.environment.local.local_env_fileshare module", "mlos_bench.environment.mock_env module", "mlos_bench.environment.remote package", "mlos_bench.environment.remote.os_env module", "mlos_bench.environment.remote.remote_env module", "mlos_bench.environment.remote.vm_env module", "mlos_bench.environment.status module", "mlos_bench.launcher module", "mlos_bench.optimizer package", "mlos_bench.optimizer.base_optimizer module", "mlos_bench.optimizer.convert_configspace module", "mlos_bench.optimizer.mlos_core_optimizer module", "mlos_bench.optimizer.mock_optimizer module", "mlos_bench.run_bench module", "mlos_bench.run_opt module", "mlos_bench.service package", "mlos_bench.service.base_fileshare module", "mlos_bench.service.base_service module", "mlos_bench.service.config_persistence module", "mlos_bench.service.local package", "mlos_bench.service.local.local_exec module", "mlos_bench.service.remote package", "mlos_bench.service.remote.azure package", "mlos_bench.service.remote.azure.azure_fileshare module", "mlos_bench.service.remote.azure.azure_services module", "mlos_bench.service.remote.ssh package", "mlos_bench.tunables package", "mlos_bench.tunables.covariant_group module", "mlos_bench.tunables.tunable module", "mlos_bench.tunables.tunable_groups module", "mlos_bench.util module", "mlos_bench", "mlos_core package", "mlos_core.optimizers package", "mlos_core.optimizers.bayesian_optimizers module", "mlos_core.optimizers.optimizer module", "mlos_core.optimizers.random_optimizer module", "mlos_core.spaces package", "mlos_core.spaces.adapters package", "mlos_core.spaces.adapters.adapter module", "mlos_core.spaces.adapters.identity_adapter module", "mlos_core.spaces.adapters.llamatune module", "mlos_core", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment</span></code>.CompositeEnv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment</span></code>.Environment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment</span></code>.MockEnv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment</span></code>.Status", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment.local</span></code>.LocalEnv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment.local</span></code>.LocalFileShareEnv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment.remote</span></code>.OSEnv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment.remote</span></code>.RemoteEnv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.environment.remote</span></code>.VMEnv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.optimizer</span></code>.MlosCoreOptimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.optimizer</span></code>.MockOptimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.optimizer</span></code>.Optimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.service</span></code>.ConfigPersistenceService", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.service</span></code>.FileShareService", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.service</span></code>.Service", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.service.local</span></code>.LocalExecService", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.service.remote.azure</span></code>.AzureFileShareService", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.service.remote.azure</span></code>.AzureVMService", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.tunables</span></code>.Tunable", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_bench.tunables</span></code>.TunableGroups", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.optimizers</span></code>.OptimizerFactory", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.optimizers</span></code>.OptimizerFactory.create", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.optimizers</span></code>.OptimizerType", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.optimizers.bayesian_optimizers</span></code>.BaseBayesianOptimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.optimizers.bayesian_optimizers</span></code>.EmukitOptimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.optimizers.bayesian_optimizers</span></code>.SkoptOptimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.optimizers.optimizer</span></code>.BaseOptimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.optimizers.random_optimizer</span></code>.RandomOptimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.spaces.adapters</span></code>.SpaceAdapterFactory", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.spaces.adapters</span></code>.SpaceAdapterFactory.create", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.spaces.adapters</span></code>.SpaceAdapterType", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.spaces.adapters.adapter</span></code>.BaseSpaceAdapter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.spaces.adapters.llamatune</span></code>.LlamaTuneAdapter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.spaces</span></code>.configspace_to_emukit_space", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mlos_core.spaces</span></code>.configspace_to_skopt_space", "Welcome to MlosCore\u2019s documentation!", "Installation", "mlos-core API"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 28, 30, 32, 33, 34, 35, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 73, 74, 75, 76, 80, 81, 84, 85, 86], "framework": [0, 14, 15, 60], "help": [0, 19, 20, 84], "autom": [0, 84], "benchmark": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 28, 36, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66], "o": [0, 1, 4, 5, 6, 8, 9, 10, 19, 20, 53, 54, 55, 56], "applic": [0, 1, 4, 5, 6, 8, 10, 53, 54, 56, 86], "paramet": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84], "autotun": [0, 14, 19, 20, 84], "environ": [0, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 32, 36, 37, 59, 60, 61, 63, 64, 65, 66, 85], "compositeenv": [0, 1, 3, 37], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 21, 25, 26, 28, 30, 33, 39, 41, 49, 50, 51, 52, 53, 54, 55, 56, 64, 66, 75, 84, 85, 86], "setup": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 49, 50, 53, 54, 55, 56, 57], "teardown": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 19, 20, 49, 50, 53, 54, 55, 56, 57], "new": [0, 1, 2, 3, 8, 10, 13, 14, 15, 16, 21, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 39, 41, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 77], "statu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 28, 30, 37, 49, 50, 51, 53, 54, 56, 58, 59, 60, 66], "tunable_param": [0, 1, 2, 28, 30, 50, 53, 54, 55, 56, 57, 66], "localenv": [0, 1, 4, 5, 6, 37], "localfileshareenv": [0, 1, 4, 6, 37], "mockenv": [0, 1, 7, 37], "remoteenv": [0, 1, 8, 10, 37], "cancel": [0, 1, 12, 52], "fail": [0, 1, 3, 12, 14, 15, 17, 18, 28, 30, 49, 52, 58, 59, 60, 66], "pend": [0, 1, 12, 28, 30, 39, 40, 41, 42, 52, 66, 73, 74, 75, 76], "readi": [0, 1, 4, 5, 8, 10, 11, 12, 28, 30, 52, 53, 56, 57, 66], "succeed": [0, 1, 12, 14, 15, 17, 18, 28, 30, 52, 58, 59, 60, 66], "timed_out": [0, 1, 12, 28, 30, 52, 66], "unknown": [0, 1, 12, 52], "is_cancel": [0, 1, 12, 52], "is_fail": [0, 1, 12, 52], "is_good": [0, 1, 12, 52], "is_pend": [0, 1, 12, 52], "is_readi": [0, 1, 12, 52], "is_succeed": [0, 1, 12, 52], "is_timed_out": [0, 1, 12, 52], "local": [0, 1, 2, 21, 22, 28, 29, 49, 50, 51, 55, 56, 57, 62, 65], "remot": [0, 1, 2, 4, 5, 6, 21, 22, 23, 36, 50, 53, 54, 62, 63], "osenv": [0, 1, 8, 9], "vmenv": [0, 1, 2, 8, 9, 11, 28, 30, 36, 50, 55, 66], "base_environ": [0, 1], "modul": [0, 1, 4, 8, 14, 21, 25, 27, 28, 32, 37, 38, 39, 43, 44, 84], "composite_env": [0, 1], "mock_env": [0, 1], "optim": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 19, 20, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 77, 80, 81, 84, 85], "mloscoreoptim": [0, 14, 15, 17, 37, 60], "bulk_regist": [0, 14, 15, 17, 18, 58, 59, 60], "get_best_observ": [0, 14, 15, 17, 18, 38, 39, 41, 58, 59, 60, 75], "regist": [0, 14, 15, 17, 18, 21, 23, 38, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 60, 63, 73, 74, 75, 76, 80, 81, 84], "suggest": [0, 14, 15, 17, 18, 38, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 60, 73, 74, 75, 76, 80, 81, 84], "mockoptim": [0, 14, 18, 37], "load": [0, 13, 14, 15, 17, 18, 21, 24, 58, 59, 60, 61], "not_converg": [0, 14, 15, 60], "target": [0, 14, 15, 17, 18, 21, 25, 26, 44, 45, 46, 47, 58, 59, 60, 64, 80, 81], "base_optim": [0, 14], "convert_configspac": [0, 14], "tunable_groups_to_configspac": [0, 14, 16], "mlos_core_optim": [0, 14], "mock_optim": [0, 14], "servic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 36, 37, 49, 50, 51, 53, 54, 55, 56, 57, 84], "configpersistenceservic": [0, 21, 24, 37], "build_environ": [0, 21, 24, 61], "build_servic": [0, 21, 24, 61], "build_tun": [0, 21, 24, 61], "load_config": [0, 13, 21, 24, 61], "load_environ": [0, 21, 24, 61], "load_environment_list": [0, 21, 24, 61], "load_servic": [0, 21, 24, 61], "load_tun": [0, 21, 24, 61], "resolve_path": [0, 21, 24, 61], "fileshareservic": [0, 21, 22, 28, 29, 37], "download": [0, 1, 2, 4, 6, 21, 22, 27, 28, 29, 50, 54, 62, 65], "upload": [0, 1, 4, 6, 21, 22, 27, 28, 29, 54, 62, 65], "localexecservic": [0, 21, 25, 26, 37], "local_exec": [0, 21, 25, 64], "temp_dir_context": [0, 21, 25, 26, 64], "export": [0, 21, 23, 24, 61, 63], "base_fileshar": [0, 21], "base_servic": [0, 21], "config_persist": [0, 21], "tunabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 24, 28, 30, 37, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66], "categorical_valu": [0, 32, 34, 67], "copi": [0, 32, 33, 34, 35, 67, 68, 85], "is_valid": [0, 32, 34, 67], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 21, 24, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 72, 73, 74, 75, 76, 80, 81], "rang": [0, 32, 34, 51, 67, 84], "type": [0, 32, 34, 36, 39, 67, 69], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 28, 30, 32, 33, 34, 35, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 71, 79, 81], "tunablegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 21, 24, 32, 35, 37, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61], "assign": [0, 32, 34, 35, 67, 68], "get_nam": [0, 32, 33, 35, 68], "get_param_valu": [0, 32, 35, 68], "get_tun": [0, 32, 33, 35, 68], "is_upd": [0, 32, 33, 35, 68], "reset": [0, 32, 33, 35, 68], "subgroup": [0, 32, 35, 68], "updat": [0, 32, 33, 35, 68, 85], "covariant_group": [0, 32], "covarianttunablegroup": [0, 32, 33, 35, 68], "tunable_group": [0, 32], "launcher": [0, 19, 37], "global_config": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 21, 24, 36, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61], "load_env": [0, 13], "parse_arg": [0, 13], "parser": [0, 13], "run_bench": [0, 37, 86], "run_opt": [0, 37, 86], "util": [0, 37], "check_required_param": [0, 36, 37], "instantiate_from_config": [0, 36, 37], "prepare_class_load": [0, 36, 37], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 86], "str": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74], "config": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 43, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 84], "dict": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 39, 44, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 81], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 21, 23, 24, 25, 26, 32, 34, 35, 36, 39, 40, 41, 42, 44, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 69, 72, 73, 74, 75, 76, 77, 81, 85], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 50, 60, 62, 63, 72, 73, 74, 75], "composit": [1, 3, 49], "method": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 84], "tupl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 21, 25, 26, 28, 30, 32, 34, 35, 36, 49, 50, 51, 53, 54, 56, 58, 59, 60, 64, 66, 67, 68], "submit": [1, 3, 8, 10, 49, 56], "experi": [1, 2, 3, 7, 8, 10, 14, 15, 17, 18, 33, 39, 40, 41, 42, 49, 50, 51, 56, 58, 59, 60, 73, 74, 75, 76, 84, 85], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 39, 41, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 75, 77, 80, 81, 82, 83], "result": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 28, 30, 49, 50, 51, 53, 54, 56, 58, 59, 60, 66, 84], "last": [1, 3, 49], "child": [1, 3, 49], "success": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 17, 18, 28, 30, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 66], "otherwis": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 17, 18, 28, 30, 32, 33, 34, 35, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68], "output": [1, 2, 3, 4, 5, 6, 7, 8, 10, 19, 20, 49, 50, 51, 53, 54, 56], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 79, 86], "pair": [1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 23, 28, 30, 32, 35, 49, 50, 51, 53, 54, 56, 58, 59, 60, 63, 66, 68], "where": [1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 49, 50, 51, 53, 54, 56, 61], "complet": [1, 2, 3, 4, 5, 6, 7, 8, 10, 49, 50, 51, 53, 54, 56], "If": [1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 22, 24, 25, 26, 28, 29, 30, 49, 50, 51, 53, 54, 56, 61, 62, 64, 65, 66, 81], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 25, 26, 27, 28, 30, 49, 50, 51, 53, 54, 56, 61, 64, 66, 86], "score": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 39, 41, 49, 50, 51, 53, 54, 56, 58, 59, 60, 75], "usual": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 28, 30, 49, 50, 51, 53, 54, 56, 58, 59, 60, 66], "expect": [1, 2, 3, 4, 5, 6, 7, 8, 10, 49, 50, 51, 53, 54, 56], "field": [1, 2, 3, 4, 5, 6, 7, 8, 10, 21, 24, 49, 50, 51, 53, 54, 56, 61], "bool": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 17, 18, 21, 22, 25, 26, 28, 29, 30, 32, 33, 34, 35, 44, 47, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 81], "set": [1, 2, 3, 4, 5, 8, 10, 14, 15, 17, 19, 20, 32, 35, 44, 47, 49, 50, 53, 56, 58, 60, 68, 81], "up": [1, 2, 3, 4, 5, 8, 9, 10, 49, 50, 53, 55, 56], "children": [1, 3, 49], "collect": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 16, 21, 24, 25, 26, 29, 30, 32, 33, 35, 36, 49, 50, 51, 53, 54, 55, 56, 57, 61, 64, 68, 84], "along": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 49, 50, 53, 54, 55, 56, 57], "free": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 21, 23, 24, 36, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "format": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 21, 23, 24, 36, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "dictionari": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 21, 23, 24, 28, 30, 32, 35, 36, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 81], "global": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 19, 20, 21, 24, 36, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61], "ar": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 17, 28, 30, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 66, 72, 73, 74, 75, 76, 80, 81], "us": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 19, 20, 21, 24, 25, 26, 39, 40, 41, 42, 44, 47, 49, 50, 51, 53, 54, 55, 56, 57, 61, 64, 69, 71, 73, 74, 75, 76, 77, 79, 81, 85], "process": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 21, 25, 26, 49, 50, 53, 54, 55, 56, 57, 64], "is_success": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 49, 50, 53, 54, 55, 56, 57], "true": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 17, 18, 21, 22, 25, 26, 28, 29, 30, 32, 33, 34, 35, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68], "all": [1, 2, 3, 21, 22, 23, 24, 32, 33, 34, 35, 36, 49, 50, 51, 53, 54, 55, 56, 57, 61, 62, 63, 67, 68], "oper": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 28, 30, 44, 45, 46, 47, 49, 50, 53, 54, 55, 56, 57, 66, 80, 81], "fals": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 17, 18, 21, 22, 25, 26, 28, 29, 32, 33, 34, 35, 44, 47, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 81], "tear": [1, 2, 3, 49, 50], "down": [1, 2, 3, 8, 9, 10, 11, 28, 30, 49, 50, 55, 56, 57, 66, 84], "thi": [1, 2, 3, 8, 10, 19, 20, 21, 23, 24, 33, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 56, 61, 63, 72, 73, 74, 75, 76, 80, 81, 84, 85, 86], "idempot": [1, 2, 3, 49, 50], "e": [1, 2, 3, 14, 15, 17, 18, 21, 23, 24, 33, 36, 39, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 69, 77, 84, 85], "call": [1, 2, 3, 44, 45, 46, 47, 49, 50, 80, 81], "sever": [1, 2, 3, 49, 50], "time": [1, 2, 3, 28, 30, 49, 50, 66, 85], "equival": [1, 2, 3, 49, 50], "singl": [1, 2, 3, 21, 24, 39, 41, 44, 45, 46, 47, 49, 50, 61, 75, 80, 81, 86], "The": [1, 3, 14, 15, 17, 18, 21, 24, 25, 26, 28, 30, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 58, 59, 60, 61, 64, 66, 72, 73, 74, 75, 76, 80, 81, 85, 86], "being": [1, 3, 14, 15, 17, 18, 28, 30, 49, 58, 59, 60, 66], "torn": [1, 3, 49], "revers": [1, 3, 49], "order": [1, 3, 49], "object": [1, 2, 13, 14, 15, 21, 23, 24, 32, 33, 34, 35, 39, 41, 45, 49, 50, 51, 53, 54, 55, 56, 57, 61, 67, 68, 69, 77, 84], "an": [1, 2, 8, 10, 14, 15, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 36, 39, 40, 41, 42, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 79, 84], "abstract": [1, 2, 14, 15, 21, 22, 23, 39, 40, 41, 45, 50, 60, 62, 63, 72, 75, 80, 84], "classmethod": [1, 2, 14, 15, 21, 23, 24, 50, 60, 61, 63], "env_nam": [1, 2, 50], "class_nam": [1, 2, 14, 15, 21, 23, 36, 50, 60, 62, 63, 65], "factori": [1, 2, 14, 15, 21, 23, 24, 36, 39, 50, 60, 61, 63, 69, 77], "given": [1, 2, 14, 15, 17, 18, 21, 23, 24, 32, 33, 35, 39, 40, 41, 42, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 72, 73, 74, 75, 76, 77], "human": [1, 2, 21, 24, 49, 50, 51, 53, 54, 55, 56, 57, 61, 67], "readabl": [1, 2, 21, 24, 49, 50, 51, 53, 54, 55, 56, 57, 61, 67], "fqn": [1, 2, 14, 15, 21, 23, 24, 36, 50, 60, 61, 63], "python": [1, 2, 14, 15, 21, 23, 24, 36, 50, 60, 61, 63, 67, 68], "instanti": [1, 2, 14, 15, 21, 23, 24, 36, 50, 60, 61, 63], "g": [1, 2, 14, 15, 17, 18, 21, 23, 24, 36, 39, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 69, 77, 84, 85], "must": [1, 2, 14, 15, 21, 23, 28, 30, 36, 49, 50, 53, 54, 55, 56, 57, 60, 63, 66], "deriv": [1, 2, 14, 15, 21, 23, 36, 39, 50, 60, 63, 69, 77], "from": [1, 2, 4, 6, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 35, 36, 39, 40, 41, 50, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 84, 85], "contain": [1, 2, 14, 15, 19, 20, 21, 23, 24, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 75, 80, 81, 84, 85], "configur": [1, 2, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 23, 24, 28, 30, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85], "It": [1, 2, 14, 15, 21, 23, 50, 60, 62, 63, 65, 84], "pass": [1, 2, 14, 15, 17, 21, 23, 24, 36, 39, 50, 58, 59, 60, 61, 62, 63, 65, 69, 77], "constructor": [1, 2, 14, 15, 17, 21, 23, 24, 36, 39, 50, 58, 60, 61, 62, 63, 65, 69, 77], "specifi": [1, 2, 14, 15, 21, 23, 32, 35, 50, 60, 62, 63, 65, 68], "secur": [1, 2, 49, 50, 51, 53, 54, 55, 56, 57], "credenti": [1, 2, 49, 50, 51, 53, 54, 55, 56, 57], "mix": [1, 2, 21, 23, 24, 49, 50, 51, 53, 54, 55, 56, 57, 61, 63], "const_arg": [1, 2, 28, 30, 49, 50, 51, 53, 54, 55, 56, 57, 66], "section": [1, 2, 49, 50, 51, 53, 54, 55, 56, 57], "group": [1, 2, 8, 9, 11, 21, 24, 32, 33, 35, 49, 50, 55, 57, 61, 68], "option": [1, 2, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 32, 35, 36, 39, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 68, 69, 77, 81], "provid": [1, 2, 21, 23, 24, 25, 26, 44, 45, 46, 47, 49, 50, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 80, 81, 84, 85, 86], "deploi": [1, 2, 21, 24, 28, 30, 49, 50, 53, 54, 55, 56, 57, 61, 66], "reboot": [1, 2, 8, 10, 21, 24, 28, 30, 49, 50, 53, 54, 55, 56, 57, 61, 66], "vm": [1, 2, 8, 9, 11, 21, 24, 28, 30, 49, 50, 53, 54, 55, 56, 57, 61, 66], "etc": [1, 2, 21, 24, 39, 40, 41, 42, 49, 50, 53, 54, 55, 56, 57, 61, 64, 69, 73, 74, 75, 76, 77, 84], "env": [1, 2, 21, 24, 25, 26, 50, 61, 64, 85], "instanc": [1, 2, 4, 5, 6, 8, 10, 14, 15, 16, 21, 23, 24, 32, 33, 35, 36, 39, 40, 41, 42, 50, 53, 54, 56, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79], "initi": [1, 2, 14, 15, 21, 23, 24, 28, 30, 38, 39, 44, 50, 60, 61, 63, 66, 85], "execut": [1, 2, 10, 21, 25, 26, 27, 28, 30, 39, 40, 41, 42, 50, 53, 56, 64, 66, 73, 74, 75, 76], "For": [1, 2, 50, 84, 85], "mai": [1, 2, 50], "start": [1, 2, 8, 9, 11, 28, 30, 39, 40, 41, 42, 50, 55, 57, 66, 73, 74, 75, 76, 85], "reconfigur": [1, 2, 50], "detail": [1, 2, 19, 20, 50, 85], "via": [1, 2, 50, 84], "necessari": [1, 2, 4, 5, 8, 9, 11, 28, 30, 50, 53, 55, 57, 66], "row": [1, 2, 39, 40, 41, 42, 44, 45, 46, 47, 50, 72, 73, 74, 75, 76, 80, 81], "should": [1, 2, 8, 10, 50, 56], "check": [1, 2, 4, 5, 8, 9, 10, 11, 12, 14, 15, 28, 30, 32, 33, 34, 35, 36, 50, 52, 53, 55, 56, 57, 60, 66, 67, 68], "benchmark_statu": [1, 2, 50], "telemetri": [1, 2, 50], "form": [1, 2, 50], "get": [1, 2, 13, 14, 15, 17, 18, 28, 30, 32, 33, 34, 35, 39, 40, 41, 42, 44, 47, 50, 58, 59, 60, 66, 67, 68, 72, 73, 74, 75, 76, 81, 85], "space": [1, 2, 38, 39, 40, 41, 42, 48, 50, 58, 59, 60, 69, 72, 73, 74, 75, 76, 84], "covari": [1, 2, 21, 24, 32, 33, 35, 50, 61, 68], "schedul": [1, 4, 5, 6, 7, 21, 25, 26, 51, 53, 54, 64], "side": [1, 4, 5, 6, 7, 25, 26, 51, 53, 54], "In": [1, 4, 5, 6, 32, 35, 53, 54, 68], "could": [1, 4, 5, 6, 53, 54], "prepar": [1, 4, 5, 6, 53, 54], "file": [1, 4, 5, 6, 13, 19, 20, 21, 22, 24, 28, 29, 53, 54, 61, 62, 64, 65, 85], "prior": [1, 4, 5, 6, 53, 54], "transfer": [1, 4, 5, 6, 53, 54], "clean": [1, 4, 5, 8, 9, 10, 53, 55, 56], "data": [1, 4, 6, 7, 14, 15, 17, 18, 21, 25, 26, 32, 34, 51, 54, 58, 59, 60, 64, 67, 84], "share": [1, 4, 6, 21, 22, 28, 29, 54, 62, 65], "storag": [1, 4, 6, 54], "post": [1, 4, 6, 54], "mock": [1, 7, 14, 18, 51, 59], "produc": [1, 7, 39, 42, 51, 76], "one": [1, 7, 19, 20, 21, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 51, 61, 64, 66, 67, 68], "host": [1, 8, 9, 10, 27, 55, 56], "can": [1, 8, 10, 13, 21, 23, 24, 25, 26, 32, 34, 39, 40, 41, 42, 56, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 84, 85], "re": [1, 8, 10, 11, 56, 57], "launch": [1, 8, 10, 13, 56], "requir": [1, 8, 10, 13, 36, 56, 84], "shut": [1, 8, 9, 10, 11, 28, 30, 55, 56, 57, 66], "enum": [1, 12, 39, 52, 69], "5": [1, 12, 52], "6": [1, 12, 52], "1": [1, 12, 52, 85], "2": [1, 12, 21, 24, 32, 34, 35, 44, 47, 52, 61, 67, 68, 81], "3": [1, 12, 21, 25, 26, 52, 64], "4": [1, 12, 52], "7": [1, 12, 52], "0": [1, 12, 33, 44, 47, 52, 81, 85], "properti": [1, 12, 13, 14, 15, 28, 30, 32, 33, 34, 39, 41, 44, 45, 46, 47, 52, 60, 66, 67, 75, 80, 81], "good": [1, 12, 52], "timedout": [1, 12, 52], "local_env": [1, 4], "local_env_fileshar": [1, 4], "os_env": [1, 8], "remote_env": [1, 8], "vm_env": [1, 8], "hierarchi": 2, "level": [8, 9, 19, 20, 55], "boot": [8, 9, 55], "variabl": [8, 9, 11, 21, 25, 26, 28, 30, 55, 57, 64, 66], "togeth": [8, 9, 11, 28, 30, 55, 57, 66], "suffici": [8, 9, 11, 28, 30, 55, 57, 66], "provis": [8, 9, 11, 28, 30, 55, 57, 66], "without": [8, 9, 19, 55], "deprovis": [8, 9, 28, 30, 55, 66], "releas": [8, 11, 28, 30, 57, 66], "azur": [9, 21, 23, 27, 63], "helper": [13, 24, 26, 28, 29, 30, 36, 43, 65, 66, 84, 86], "function": [13, 16, 21, 23, 24, 26, 29, 30, 36, 39, 40, 43, 61, 62, 63, 64, 65, 66, 72, 73, 74, 86], "command": [13, 21, 25, 26, 27, 28, 30, 64, 66], "line": [13, 21, 25, 26, 28, 30, 64, 66], "descript": [13, 84], "common": 13, "part": 13, "attribut": [13, 14, 15, 17, 18, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 60, 67, 72, 73, 74, 75, 76, 80, 81], "overrid": 13, "snippet": 13, "so": [13, 14, 15, 17, 18, 39, 41, 58, 59, 60, 75, 84], "we": [13, 14, 15, 17, 58, 60, 84, 85], "add": [13, 21, 24, 61], "more": [13, 19, 20, 85], "argument": [13, 36, 39, 51, 69, 77], "ani": [13, 28, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 66, 67, 68, 72, 73, 74, 75, 76, 85], "json_file_nam": [13, 21, 24, 61], "json": [13, 19, 20, 21, 24, 61, 67], "path": [13, 19, 20, 21, 22, 24, 25, 26, 28, 29, 61, 62, 64, 65], "rel": [13, 21, 24, 61], "config_path": [13, 19, 20], "creat": [13, 21, 24, 25, 26, 32, 35, 38, 39, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 81, 85], "inject": 13, "persist": [13, 61], "other": [13, 14, 15, 17, 18, 58, 59, 60], "namespac": 13, "pars": 13, "argumentpars": 13, "interfac": [14, 15, 39, 40, 41, 45, 60, 72, 75, 80], "wrapper": [14, 17, 39, 40, 41, 58, 73, 74, 75], "mlos_cor": [14, 15, 16, 17, 58, 60, 85, 86], "metric": [14, 15, 17, 18, 58, 59, 60], "list": [14, 15, 17, 18, 21, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 43, 58, 59, 60, 61, 63, 64, 66, 67, 68, 83, 86], "float": [14, 15, 17, 18, 32, 34, 58, 59, 60, 67], "pre": [14, 15, 17, 18, 58, 59, 60, 85], "bulk": [14, 15, 17, 18, 58, 59, 60], "previou": [14, 15, 17, 18, 58, 59, 60], "record": [14, 15, 17, 18, 58, 59, 60], "correspond": [14, 15, 16, 17, 18, 58, 59, 60], "is_not_empti": [14, 15, 17, 18, 58, 59, 60], "best": [14, 15, 17, 18, 39, 41, 58, 59, 60, 75], "observ": [14, 15, 17, 18, 39, 41, 58, 59, 60, 75], "far": [14, 15, 17, 18, 39, 41, 58, 59, 60, 75], "ha": [14, 15, 17, 18, 32, 33, 35, 39, 40, 41, 42, 58, 59, 60, 68, 73, 74, 75, 76], "been": [14, 15, 17, 18, 32, 33, 35, 39, 40, 41, 42, 58, 59, 60, 68, 73, 74, 75, 76], "yet": [14, 15, 17, 18, 39, 40, 41, 42, 58, 59, 60, 72, 73, 74, 75, 76], "": [14, 15, 17, 18, 36, 39, 40, 58, 59, 60, 72, 73, 74, 81, 85], "same": [14, 15, 17, 18, 33, 39, 41, 58, 59, 60, 75], "final": [14, 15, 17, 18, 58, 59, 60], "union": [14, 15, 17, 18, 58, 59, 60], "scalar": [14, 15, 17, 18, 58, 59, 60], "wa": [14, 15, 17, 18, 58, 59, 60], "extract": [14, 15, 17, 18, 36, 58, 59, 60], "possibli": [14, 15, 17, 18, 58, 59, 60], "transform": [14, 15, 17, 18, 39, 40, 41, 43, 44, 45, 46, 47, 58, 59, 60, 73, 75, 80, 81], "datafram": [14, 15, 17, 18, 39, 40, 41, 42, 44, 45, 46, 47, 58, 59, 60, 72, 73, 74, 75, 76, 80, 81], "minim": [14, 15, 17, 18, 58, 59, 60], "gener": [14, 15, 17, 18, 44, 47, 58, 59, 60, 81], "next": [14, 15, 17, 18, 58, 59, 60], "These": [14, 15, 17, 58, 60], "test": [14, 18, 19, 59, 86], "api": [14, 18, 59, 84], "random": [14, 18, 39, 42, 59, 71, 76, 84], "between": [14, 15, 60], "static": [14, 15, 21, 24, 39, 60, 61, 69, 77], "shim": [14, 15, 60], "opt": [14, 15, 60], "converg": [14, 15, 60], "implement": [14, 15, 21, 39, 40, 41, 42, 44, 47, 60, 72, 73, 74, 75, 76, 81, 84], "just": [14, 15, 32, 33, 35, 60, 68, 84, 85], "iter": [14, 15, 36, 60], "count": [14, 15, 60], "convert": [16, 43, 82, 83], "configspac": [16, 39, 40, 41, 42, 43, 44, 45, 46, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83], "configurationspac": [16, 39, 40, 41, 42, 43, 44, 45, 46, 47, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83], "hyperparamet": 16, "input": [16, 21, 24, 39, 43, 61, 69, 77, 82, 83], "involv": 19, "mostli": 19, "develop": 19, "purpos": 19, "see": [19, 20, 85], "usag": [19, 20], "py": [19, 20, 86], "h": [19, 20], "log": [19, 20], "log_fil": [19, 20], "log_level": [19, 20], "show": [19, 20], "messag": [19, 20], "exit": [19, 20], "stdout": [19, 20, 21, 25, 26, 64], "omit": [19, 20, 21, 25, 26, 32, 35, 64, 68], "default": [19, 20, 21, 22, 25, 26, 28, 29, 44, 47, 62, 64, 65, 81], "20": [19, 20], "info": [19, 20, 28, 30, 66], "10": [19, 20], "debug": [19, 20], "30": [19, 20], "warn": [19, 20], "onli": [19, 20], "One": [19, 20], "locat": [19, 20], "addit": [19, 20, 21, 24, 61, 85], "privat": [19, 20], "disabl": [19, 20, 81], "after": [19, 20, 39, 41, 75, 85], "main": 20, "loop": [20, 84, 86], "parent": [21, 22, 23, 24, 25, 26, 28, 29, 30, 61, 62, 63, 64, 65, 66], "deseri": [21, 24, 61, 67], "three": [21, 24, 61], "mandatori": [21, 24, 61], "string": [21, 23, 24, 32, 33, 34, 61, 63, 67], "describ": [21, 24, 61, 84], "each": [21, 24, 39, 41, 44, 47, 50, 53, 54, 55, 56, 57, 61, 75, 81], "element": [21, 24, 61], "refer": [21, 24, 32, 35, 61, 68], "svc": [21, 23, 24, 61, 63], "combin": [21, 24, 61], "plu": [21, 24, 61], "serial": [21, 24, 61, 68], "represent": [21, 24, 61, 68], "search": [21, 24, 44, 47, 61, 81, 84], "_config_path": [21, 24, 61], "absolut": [21, 24, 61], "build": [21, 24, 61, 85], "either": [21, 24, 61], "read": [21, 24, 61], "bundl": [21, 24, 61], "those": [21, 24, 32, 35, 61, 68, 85], "file_path": [21, 24, 61], "extra_path": [21, 24, 61], "prepend": [21, 24, 61], "suitabl": [21, 24, 61], "latter": [21, 24, 61], "directori": [21, 22, 24, 25, 26, 28, 29, 61, 62, 64, 65, 85], "actual": [21, 24, 61], "remote_path": [21, 22, 28, 29, 62, 65], "local_path": [21, 22, 28, 29, 62, 65], "recurs": [21, 22, 28, 29, 62, 65], "content": [21, 22, 28, 29, 62, 65], "store": [21, 22, 28, 29, 62, 65], "ignor": [21, 22, 28, 29, 62, 65], "subdirectori": [21, 22, 28, 29, 62, 65], "entir": [21, 22, 28, 29, 32, 33, 35, 62, 65, 68], "tree": [21, 22, 28, 29, 62, 65], "extern": [21, 25, 26, 64], "node": [21, 25, 26, 64], "act": [21, 25, 26, 64], "due": [21, 25, 26, 64], "reduc": [21, 25, 26, 64], "depend": [21, 25, 26, 32, 34, 64, 67, 84, 85], "manag": [21, 25, 26, 28, 30, 64, 66, 84, 85], "complic": [21, 25, 26, 64], "v": [21, 25, 26, 64], "script_lin": [21, 25, 26, 64], "cwd": [21, 25, 26, 64], "return_on_error": [21, 25, 26, 64], "int": [21, 25, 26, 32, 33, 34, 39, 40, 44, 47, 64, 67, 74, 81], "treat": [21, 25, 26, 64], "everi": [21, 25, 26, 64], "separ": [21, 25, 26, 64], "work": [21, 25, 26, 64, 85], "temp_dir": [21, 25, 26, 64], "temporari": [21, 25, 26, 64], "dir": [21, 25, 26, 64], "stop": [21, 25, 26, 28, 30, 64, 66], "first": [21, 25, 26, 64], "non": [21, 25, 26, 64], "zero": [21, 25, 26, 64], "code": [21, 25, 26, 64, 84], "return_cod": [21, 25, 26, 64], "stderr": [21, 25, 26, 64], "temp": [21, 25, 26, 64], "temporarydirectori": [21, 25, 26, 64], "context": [21, 25, 26, 39, 40, 41, 42, 64, 72, 73, 74, 75, 76, 84], "claus": [21, 25, 26, 64], "callabl": [21, 23, 63], "avail": [21, 23, 63], "azurevmservic": [21, 23, 27, 28, 30, 63], "mixin": [21, 23, 61, 62, 63, 64, 65, 66], "azurefileshareservic": [21, 27, 28, 29], "ssh": [21, 27], "ins": 23, "encapsul": 24, "check_vm_operation_statu": [27, 28, 30, 66], "get_remote_exec_result": [27, 28, 30, 66], "remote_exec": [27, 28, 30, 66], "vm_deprovis": [27, 28, 30, 66], "vm_provis": [27, 28, 30, 66], "vm_reboot": [27, 28, 30, 66], "vm_start": [27, 28, 30, 66], "vm_stop": [27, 28, 30, 66], "wait_vm_deploy": [27, 28, 30, 66], "wait_vm_oper": [27, 28, 30, 66], "submodul": [27, 37, 38, 43, 48], "azure_fileshar": [27, 28], "azure_servic": [27, 28], "specif": [28, 84], "interact": [28, 29, 65], "param": [28, 30, 66], "flat": [28, 30, 32, 35, 66, 68], "kei": [28, 30, 32, 35, 58, 59, 60, 66, 68], "have": [28, 30, 33, 49, 50, 53, 54, 55, 56, 57, 66], "asyncresultsurl": [28, 30, 66], "present": [28, 30, 36, 66], "runtim": [28, 30, 66], "asynchron": [28, 30, 66], "thei": [28, 30, 66], "come": [28, 30, 66], "dealloc": [28, 30, 66], "comput": [28, 30, 66], "resourc": [28, 30, 66], "alwai": [28, 30, 66], "grace": [28, 30, 66], "shutdown": [28, 30, 66], "is_setup": [28, 30, 66], "wait": [28, 30, 66], "resolv": [28, 30, 66], "when": [28, 30, 44, 47, 66, 81], "out": [28, 30, 66, 84], "fileshar": 29, "definit": [32, 33, 34, 35, 67], "its": [32, 33, 34, 35, 36, 67, 68], "current": [32, 33, 34, 35, 36, 67, 68, 85], "possibl": [32, 34, 67, 84], "categor": [32, 34, 67], "id": [32, 33, 34, 35, 67, 68], "numer": [32, 34, 67], "deep": [32, 33, 34, 35, 67, 68], "origin": [32, 33, 34, 35, 44, 45, 46, 47, 67, 68, 80, 81, 84], "valid": [32, 34, 67], "number": [32, 34, 44, 47, 67, 81], "repres": [32, 34, 67], "param_valu": [32, 35, 68], "place": [32, 35, 68], "map": [32, 35, 68], "self": [32, 35, 68], "chain": [32, 35, 68], "group_nam": [32, 35, 68], "into_param": [32, 35, 68], "belong": [32, 35, 44, 45, 46, 47, 68, 80, 81], "select": [32, 35, 68], "access": [32, 33, 35, 68], "throw": [32, 33, 35, 68], "keyerror": [32, 33, 35, 68], "found": [32, 35, 68], "clear": [32, 33, 35, 68], "flag": [32, 33, 35, 68], "consist": [32, 35, 68], "merg": [32, 35, 68], "two": [32, 35, 51, 68], "get_cost": [32, 33], "get_valu": [32, 33], "chang": 33, "incur": 33, "cost": 33, "That": [33, 39, 40, 41, 42, 73, 74, 75, 76], "state": 33, "extra": 33, "variou": 36, "required_param": 36, "rais": 36, "valueerror": 36, "miss": 36, "identifi": [36, 67], "base_class": 36, "arg": [36, 52, 69, 71, 77, 79], "kwarg": [36, 52, 69, 71, 77, 79], "posit": 36, "keyword": 36, "inst": 36, "class_config": 36, "packag": [37, 48, 85], "subpackag": [37, 48], "basic": [38, 39, 41, 44, 45, 75, 80], "baseoptim": [38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 69, 80, 81], "get_observ": [38, 39, 41, 75], "register_pend": [38, 39, 40, 41, 42, 73, 74, 75, 76], "space_adapt": [38, 39, 40, 41, 42, 72, 73, 74, 75, 76], "emukitoptim": [38, 39, 40, 48, 69, 71], "acquisition_funct": [38, 39, 40, 72, 73, 74], "surrogate_predict": [38, 39, 40, 72, 73, 74], "optimizerfactori": [38, 39, 48], "randomoptim": [38, 39, 42, 48, 69, 71], "skoptoptim": [38, 39, 40, 48, 69, 71], "bayesian_optim": [38, 39, 71], "basebayesianoptim": [38, 39, 40], "random_optim": [38, 39, 71], "configspace_to_emukit_spac": [38, 43, 48], "configspace_to_skopt_spac": [38, 43, 48], "adapt": [38, 39, 40, 41, 42, 43, 69, 72, 73, 74, 75, 76], "identityadapt": [38, 43, 44, 46, 79], "llamatuneadapt": [38, 43, 44, 47, 77, 79], "parameter_spac": [39, 40, 41, 42, 69, 72, 73, 74, 75, 76, 77, 81], "basespaceadapt": [39, 40, 41, 42, 43, 44, 45, 46, 47, 72, 73, 74, 75, 76, 77, 81], "defin": [39, 40, 41, 45, 58, 59, 60, 69, 72, 75, 80], "emploi": [39, 40, 41, 73, 75, 81], "best_observ": [39, 41, 75], "pd": [39, 40, 41, 42, 44, 45, 46, 47, 72, 73, 74, 75, 76, 80, 81], "column": [39, 40, 41, 42, 44, 45, 46, 47, 72, 73, 74, 75, 76, 80, 81], "seri": [39, 41, 75], "which": [39, 41, 44, 45, 46, 47, 75, 80, 81, 85], "befor": [39, 41, 75], "index": [39, 41, 75], "Not": [39, 40, 41, 42, 51, 72, 73, 74, 75, 76], "sai": [39, 40, 41, 42, 73, 74, 75, 76], "trial": [39, 40, 41, 42, 73, 74, 75, 76], "multipl": [39, 40, 41, 42, 73, 74, 75, 76], "parallel": [39, 40, 41, 42, 73, 74, 75, 76], "retri": [39, 40, 41, 42, 73, 74, 75, 76], "logic": [39, 40, 41, 42, 73, 74, 75, 76], "panda": [39, 41, 44, 45, 46, 47, 75, 80, 81], "emukit": [39, 40, 43, 71, 73, 82, 85], "bayesian": [39, 40, 42, 72, 73, 74, 76], "invok": [39, 40, 72, 73, 74], "acquisit": [39, 40, 72, 73, 74], "obtain": [39, 40, 72, 73, 74], "predict": [39, 40, 72, 73, 74], "surrog": [39, 40, 72, 73, 74], "model": [39, 40, 72, 73, 74], "simpl": [39, 69, 77], "optimizer_typ": [39, 69], "optimizertyp": [39, 69], "skopt": [39, 40, 43, 69, 71, 74, 83, 85], "optimizer_kwarg": [39, 69], "space_adapter_typ": [39, 69, 77], "spaceadaptertyp": [39, 69, 77], "ident": [39, 44, 46, 69, 77, 79], "space_adapter_kwarg": [39, 69, 77], "concreteoptim": [39, 69], "potenti": [39, 69, 77], "alongsid": [39, 69, 77], "spaceadapt": [39, 44, 45, 46, 69, 77, 80], "concret": [39, 69, 77], "baselin": [39, 42, 76], "comparison": [39, 42, 76], "against": [39, 42, 76], "base_estim": [39, 40, 74], "gp": [39, 40, 74], "seed": [39, 40, 51, 74], "differ": [40, 84], "some": [43, 53, 54, 56, 84, 85], "config_spac": [43, 82, 83], "core": [43, 82, 84], "parameterspac": [43, 82], "inverse_transform": [43, 44, 45, 46, 47, 80, 81], "target_parameter_spac": [43, 44, 45, 46, 47, 80, 81], "default_max_unique_values_per_param": [43, 44, 47, 81], "default_num_low_dim": [43, 44, 47, 81], "default_special_param_value_biasing_percentag": [43, 44, 47, 81], "identity_adapt": [43, 44, 79], "llamatun": [43, 44, 79], "orig_parameter_spac": [44, 45, 46, 47, 80, 81], "op": [44, 46, 79], "explor": [44, 45, 46, 47, 80, 81], "user": [44, 45, 46, 47, 80, 81], "fed": [44, 45, 46, 80], "underli": [44, 45, 46, 47, 80, 81], "translat": [44, 45, 46, 47, 80, 81], "perform": [44, 45, 46, 47, 80, 81], "invers": [44, 45, 46, 47, 80, 81], "orig_config_spac": [44, 47, 81], "num_low_dim": [44, 47, 81], "16": [44, 47, 81], "special_param_valu": [44, 47, 81], "max_unique_values_per_param": [44, 47, 81], "10000": [44, 47, 81], "use_approximate_reverse_map": [44, 47, 81], "techniqu": [44, 47, 81], "aim": [44, 47, 81], "improv": [44, 47, 81], "sampl": [44, 47, 81], "effici": [44, 47, 81], "max": [44, 47, 81], "uniqu": [44, 47, 81], "discret": [44, 47, 81], "dimens": [44, 47, 81], "low": [44, 47, 81], "dimension": [44, 47, 81], "hesbo": [44, 47, 81], "project": [44, 47, 81, 85], "percentag": [44, 47, 81], "bia": [44, 47, 81], "special": [44, 47, 81], "__init__": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81], "least": [50, 53, 54, 55, 56, 57], "also": [53, 54, 56, 85], "follow": [53, 54, 56, 85], "dump_params_fil": [53, 54], "read_results_fil": [53, 54], "wait_boot": 56, "root": [61, 64], "proxi": 66, "enumer": [71, 79], "support": [71, 79, 85], "mloscor": [71, 79, 85], "concretespaceadapt": 77, "special_param_values_dict": 81, "per": 81, "repositori": 84, "strip": 84, "essenti": 84, "mlo": 84, "intend": 84, "simplifi": 84, "easier": 84, "consum": 84, "pip": [84, 85], "lower": 84, "constraint": 84, "easili": 84, "swap": 84, "bo": 84, "runner": [84, 85], "design": 84, "reus": 84, "much": 84, "exist": 84, "oss": 84, "librari": 84, "layer": 84, "polici": 84, "gear": 84, "toward": 84, "over": 84, "top": 84, "system": 84, "sourc": 84, "conda": 85, "eas": 85, "quick": 85, "you": 85, "vscode": 85, "simpli": 85, "open": 85, "prompt": 85, "tool": 85, "automat": 85, "insid": 85, "instruct": 85, "note": 85, "window": 85, "reli": 85, "compil": 85, "forg": 85, "channel": 85, "increas": 85, "solver": 85, "dure": 85, "To": 85, "around": 85, "experiment": 85, "libmamba": 85, "http": 85, "github": 85, "com": 85, "incub": 85, "f": 85, "yml": 85, "includ": 85, "ensur": 85, "date": 85, "make": 85, "shell": 85, "activ": 85, "bayesianoptim": 85, "ipynb": 85, "notebook": 85, "wheel": 85, "dist": 85, "somewher": 85, "els": 85, "compon": 85, "py3": 85, "whl": 85, "both": 85, "mlos_bench": [85, 86], "major": 86, "workload": 86}, "objects": {"": [[0, 0, 0, "-", "mlos_bench"], [38, 0, 0, "-", "mlos_core"]], "mlos_bench": [[1, 0, 0, "-", "environment"], [13, 0, 0, "-", "launcher"], [14, 0, 0, "-", "optimizer"], [19, 0, 0, "-", "run_bench"], [20, 0, 0, "-", "run_opt"], [21, 0, 0, "-", "service"], [32, 0, 0, "-", "tunables"], [36, 0, 0, "-", "util"]], "mlos_bench.environment": [[49, 1, 1, "", "CompositeEnv"], [50, 1, 1, "", "Environment"], [1, 1, 1, "", "LocalEnv"], [1, 1, 1, "", "LocalFileShareEnv"], [51, 1, 1, "", "MockEnv"], [1, 1, 1, "", "RemoteEnv"], [52, 1, 1, "", "Status"], [2, 0, 0, "-", "base_environment"], [3, 0, 0, "-", "composite_env"], [4, 0, 0, "-", "local"], [7, 0, 0, "-", "mock_env"], [8, 0, 0, "-", "remote"], [12, 0, 0, "-", "status"]], "mlos_bench.environment.CompositeEnv": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "run"], [49, 2, 1, "", "setup"], [49, 2, 1, "", "teardown"]], "mlos_bench.environment.Environment": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "new"], [50, 2, 1, "", "run"], [50, 2, 1, "", "setup"], [50, 2, 1, "", "status"], [50, 2, 1, "", "teardown"], [50, 2, 1, "", "tunable_params"]], "mlos_bench.environment.LocalEnv": [[1, 2, 1, "", "run"], [1, 2, 1, "", "setup"], [1, 2, 1, "", "teardown"]], "mlos_bench.environment.LocalFileShareEnv": [[1, 2, 1, "", "run"], [1, 2, 1, "", "setup"]], "mlos_bench.environment.MockEnv": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "run"]], "mlos_bench.environment.RemoteEnv": [[1, 2, 1, "", "run"], [1, 2, 1, "", "setup"], [1, 2, 1, "", "teardown"]], "mlos_bench.environment.Status": [[52, 3, 1, "", "CANCELED"], [52, 3, 1, "", "FAILED"], [52, 3, 1, "", "PENDING"], [52, 3, 1, "", "READY"], [52, 3, 1, "", "RUNNING"], [52, 3, 1, "", "SUCCEEDED"], [52, 3, 1, "", "TIMED_OUT"], [52, 3, 1, "", "UNKNOWN"], [52, 2, 1, "", "__init__"], [52, 4, 1, "", "is_canceled"], [52, 4, 1, "", "is_failed"], [52, 4, 1, "", "is_good"], [52, 4, 1, "", "is_pending"], [52, 4, 1, "", "is_ready"], [52, 4, 1, "", "is_succeeded"], [52, 4, 1, "", "is_timed_out"]], "mlos_bench.environment.base_environment": [[2, 1, 1, "", "Environment"]], "mlos_bench.environment.base_environment.Environment": [[2, 2, 1, "", "new"], [2, 2, 1, "", "run"], [2, 2, 1, "", "setup"], [2, 2, 1, "", "status"], [2, 2, 1, "", "teardown"], [2, 2, 1, "", "tunable_params"]], "mlos_bench.environment.composite_env": [[3, 1, 1, "", "CompositeEnv"]], "mlos_bench.environment.composite_env.CompositeEnv": [[3, 2, 1, "", "run"], [3, 2, 1, "", "setup"], [3, 2, 1, "", "teardown"]], "mlos_bench.environment.local": [[53, 1, 1, "", "LocalEnv"], [54, 1, 1, "", "LocalFileShareEnv"], [5, 0, 0, "-", "local_env"], [6, 0, 0, "-", "local_env_fileshare"]], "mlos_bench.environment.local.LocalEnv": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "run"], [53, 2, 1, "", "setup"], [53, 2, 1, "", "teardown"]], "mlos_bench.environment.local.LocalFileShareEnv": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "run"], [54, 2, 1, "", "setup"]], "mlos_bench.environment.local.local_env": [[5, 1, 1, "", "LocalEnv"]], "mlos_bench.environment.local.local_env.LocalEnv": [[5, 2, 1, "", "run"], [5, 2, 1, "", "setup"], [5, 2, 1, "", "teardown"]], "mlos_bench.environment.local.local_env_fileshare": [[6, 1, 1, "", "LocalFileShareEnv"]], "mlos_bench.environment.local.local_env_fileshare.LocalFileShareEnv": [[6, 2, 1, "", "run"], [6, 2, 1, "", "setup"]], "mlos_bench.environment.mock_env": [[7, 1, 1, "", "MockEnv"]], "mlos_bench.environment.mock_env.MockEnv": [[7, 2, 1, "", "run"]], "mlos_bench.environment.remote": [[55, 1, 1, "", "OSEnv"], [56, 1, 1, "", "RemoteEnv"], [57, 1, 1, "", "VMEnv"], [9, 0, 0, "-", "os_env"], [10, 0, 0, "-", "remote_env"], [11, 0, 0, "-", "vm_env"]], "mlos_bench.environment.remote.OSEnv": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "setup"], [55, 2, 1, "", "teardown"]], "mlos_bench.environment.remote.RemoteEnv": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "run"], [56, 2, 1, "", "setup"], [56, 2, 1, "", "teardown"]], "mlos_bench.environment.remote.VMEnv": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "setup"], [57, 2, 1, "", "teardown"]], "mlos_bench.environment.remote.os_env": [[9, 1, 1, "", "OSEnv"]], "mlos_bench.environment.remote.os_env.OSEnv": [[9, 2, 1, "", "setup"], [9, 2, 1, "", "teardown"]], "mlos_bench.environment.remote.remote_env": [[10, 1, 1, "", "RemoteEnv"]], "mlos_bench.environment.remote.remote_env.RemoteEnv": [[10, 2, 1, "", "run"], [10, 2, 1, "", "setup"], [10, 2, 1, "", "teardown"]], "mlos_bench.environment.remote.vm_env": [[11, 1, 1, "", "VMEnv"]], "mlos_bench.environment.remote.vm_env.VMEnv": [[11, 2, 1, "", "setup"], [11, 2, 1, "", "teardown"]], "mlos_bench.environment.status": [[12, 1, 1, "", "Status"]], "mlos_bench.environment.status.Status": [[12, 3, 1, "", "CANCELED"], [12, 3, 1, "", "FAILED"], [12, 3, 1, "", "PENDING"], [12, 3, 1, "", "READY"], [12, 3, 1, "", "RUNNING"], [12, 3, 1, "", "SUCCEEDED"], [12, 3, 1, "", "TIMED_OUT"], [12, 3, 1, "", "UNKNOWN"], [12, 4, 1, "", "is_canceled"], [12, 4, 1, "", "is_failed"], [12, 4, 1, "", "is_good"], [12, 4, 1, "", "is_pending"], [12, 4, 1, "", "is_ready"], [12, 4, 1, "", "is_succeeded"], [12, 4, 1, "", "is_timed_out"]], "mlos_bench.launcher": [[13, 1, 1, "", "Launcher"]], "mlos_bench.launcher.Launcher": [[13, 4, 1, "", "global_config"], [13, 2, 1, "", "load_config"], [13, 2, 1, "", "load_env"], [13, 2, 1, "", "parse_args"], [13, 4, 1, "", "parser"]], "mlos_bench.optimizer": [[58, 1, 1, "", "MlosCoreOptimizer"], [59, 1, 1, "", "MockOptimizer"], [60, 1, 1, "", "Optimizer"], [15, 0, 0, "-", "base_optimizer"], [16, 0, 0, "-", "convert_configspace"], [17, 0, 0, "-", "mlos_core_optimizer"], [18, 0, 0, "-", "mock_optimizer"]], "mlos_bench.optimizer.MlosCoreOptimizer": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "bulk_register"], [58, 2, 1, "", "get_best_observation"], [58, 2, 1, "", "register"], [58, 2, 1, "", "suggest"]], "mlos_bench.optimizer.MockOptimizer": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "bulk_register"], [59, 2, 1, "", "get_best_observation"], [59, 2, 1, "", "register"], [59, 2, 1, "", "suggest"]], "mlos_bench.optimizer.Optimizer": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "bulk_register"], [60, 2, 1, "", "get_best_observation"], [60, 2, 1, "", "load"], [60, 2, 1, "", "new"], [60, 2, 1, "", "not_converged"], [60, 2, 1, "", "register"], [60, 2, 1, "", "suggest"], [60, 4, 1, "", "target"]], "mlos_bench.optimizer.base_optimizer": [[15, 1, 1, "", "Optimizer"]], "mlos_bench.optimizer.base_optimizer.Optimizer": [[15, 2, 1, "", "bulk_register"], [15, 2, 1, "", "get_best_observation"], [15, 2, 1, "", "load"], [15, 2, 1, "", "new"], [15, 2, 1, "", "not_converged"], [15, 2, 1, "", "register"], [15, 2, 1, "", "suggest"], [15, 4, 1, "", "target"]], "mlos_bench.optimizer.convert_configspace": [[16, 5, 1, "", "tunable_groups_to_configspace"]], "mlos_bench.optimizer.mlos_core_optimizer": [[17, 1, 1, "", "MlosCoreOptimizer"]], "mlos_bench.optimizer.mlos_core_optimizer.MlosCoreOptimizer": [[17, 2, 1, "", "bulk_register"], [17, 2, 1, "", "get_best_observation"], [17, 2, 1, "", "register"], [17, 2, 1, "", "suggest"]], "mlos_bench.optimizer.mock_optimizer": [[18, 1, 1, "", "MockOptimizer"]], "mlos_bench.optimizer.mock_optimizer.MockOptimizer": [[18, 2, 1, "", "bulk_register"], [18, 2, 1, "", "get_best_observation"], [18, 2, 1, "", "register"], [18, 2, 1, "", "suggest"]], "mlos_bench.service": [[61, 1, 1, "", "ConfigPersistenceService"], [62, 1, 1, "", "FileShareService"], [21, 1, 1, "", "LocalExecService"], [63, 1, 1, "", "Service"], [22, 0, 0, "-", "base_fileshare"], [23, 0, 0, "-", "base_service"], [24, 0, 0, "-", "config_persistence"], [25, 0, 0, "-", "local"], [27, 0, 0, "-", "remote"]], "mlos_bench.service.ConfigPersistenceService": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "build_environment"], [61, 2, 1, "", "build_service"], [61, 2, 1, "", "build_tunables"], [61, 2, 1, "", "load_config"], [61, 2, 1, "", "load_environment"], [61, 2, 1, "", "load_environment_list"], [61, 2, 1, "", "load_services"], [61, 2, 1, "", "load_tunables"], [61, 2, 1, "", "resolve_path"]], "mlos_bench.service.FileShareService": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "download"], [62, 2, 1, "", "upload"]], "mlos_bench.service.LocalExecService": [[21, 2, 1, "", "local_exec"], [21, 2, 1, "", "temp_dir_context"]], "mlos_bench.service.Service": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "export"], [63, 2, 1, "", "new"], [63, 2, 1, "", "register"]], "mlos_bench.service.base_fileshare": [[22, 1, 1, "", "FileShareService"]], "mlos_bench.service.base_fileshare.FileShareService": [[22, 2, 1, "", "download"], [22, 2, 1, "", "upload"]], "mlos_bench.service.base_service": [[23, 1, 1, "", "Service"]], "mlos_bench.service.base_service.Service": [[23, 2, 1, "", "export"], [23, 2, 1, "", "new"], [23, 2, 1, "", "register"]], "mlos_bench.service.config_persistence": [[24, 1, 1, "", "ConfigPersistenceService"]], "mlos_bench.service.config_persistence.ConfigPersistenceService": [[24, 2, 1, "", "build_environment"], [24, 2, 1, "", "build_service"], [24, 2, 1, "", "build_tunables"], [24, 2, 1, "", "load_config"], [24, 2, 1, "", "load_environment"], [24, 2, 1, "", "load_environment_list"], [24, 2, 1, "", "load_services"], [24, 2, 1, "", "load_tunables"], [24, 2, 1, "", "resolve_path"]], "mlos_bench.service.local": [[64, 1, 1, "", "LocalExecService"], [26, 0, 0, "-", "local_exec"]], "mlos_bench.service.local.LocalExecService": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "local_exec"], [64, 2, 1, "", "temp_dir_context"]], "mlos_bench.service.local.local_exec": [[26, 1, 1, "", "LocalExecService"]], "mlos_bench.service.local.local_exec.LocalExecService": [[26, 2, 1, "", "local_exec"], [26, 2, 1, "", "temp_dir_context"]], "mlos_bench.service.remote": [[28, 0, 0, "-", "azure"], [31, 0, 0, "-", "ssh"]], "mlos_bench.service.remote.azure": [[65, 1, 1, "", "AzureFileShareService"], [66, 1, 1, "", "AzureVMService"], [29, 0, 0, "-", "azure_fileshare"], [30, 0, 0, "-", "azure_services"]], "mlos_bench.service.remote.azure.AzureFileShareService": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "download"], [65, 2, 1, "", "upload"]], "mlos_bench.service.remote.azure.AzureVMService": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "check_vm_operation_status"], [66, 2, 1, "", "get_remote_exec_results"], [66, 2, 1, "", "remote_exec"], [66, 2, 1, "", "vm_deprovision"], [66, 2, 1, "", "vm_provision"], [66, 2, 1, "", "vm_reboot"], [66, 2, 1, "", "vm_start"], [66, 2, 1, "", "vm_stop"], [66, 2, 1, "", "wait_vm_deployment"], [66, 2, 1, "", "wait_vm_operation"]], "mlos_bench.service.remote.azure.azure_fileshare": [[29, 1, 1, "", "AzureFileShareService"]], "mlos_bench.service.remote.azure.azure_fileshare.AzureFileShareService": [[29, 2, 1, "", "download"], [29, 2, 1, "", "upload"]], "mlos_bench.service.remote.azure.azure_services": [[30, 1, 1, "", "AzureVMService"]], "mlos_bench.service.remote.azure.azure_services.AzureVMService": [[30, 2, 1, "", "check_vm_operation_status"], [30, 2, 1, "", "get_remote_exec_results"], [30, 2, 1, "", "remote_exec"], [30, 2, 1, "", "vm_deprovision"], [30, 2, 1, "", "vm_provision"], [30, 2, 1, "", "vm_reboot"], [30, 2, 1, "", "vm_start"], [30, 2, 1, "", "vm_stop"], [30, 2, 1, "", "wait_vm_deployment"], [30, 2, 1, "", "wait_vm_operation"]], "mlos_bench.tunables": [[67, 1, 1, "", "Tunable"], [68, 1, 1, "", "TunableGroups"], [33, 0, 0, "-", "covariant_group"], [34, 0, 0, "-", "tunable"], [35, 0, 0, "-", "tunable_groups"]], "mlos_bench.tunables.Tunable": [[67, 2, 1, "", "__init__"], [67, 4, 1, "", "categorical_values"], [67, 2, 1, "", "copy"], [67, 2, 1, "", "is_valid"], [67, 4, 1, "", "name"], [67, 4, 1, "", "range"], [67, 4, 1, "", "type"], [67, 4, 1, "", "value"]], "mlos_bench.tunables.TunableGroups": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "assign"], [68, 2, 1, "", "copy"], [68, 2, 1, "", "get_names"], [68, 2, 1, "", "get_param_values"], [68, 2, 1, "", "get_tunable"], [68, 2, 1, "", "is_updated"], [68, 2, 1, "", "reset"], [68, 2, 1, "", "subgroup"], [68, 2, 1, "", "update"]], "mlos_bench.tunables.covariant_group": [[33, 1, 1, "", "CovariantTunableGroup"]], "mlos_bench.tunables.covariant_group.CovariantTunableGroup": [[33, 2, 1, "", "copy"], [33, 2, 1, "", "get_cost"], [33, 2, 1, "", "get_names"], [33, 2, 1, "", "get_tunable"], [33, 2, 1, "", "get_values"], [33, 2, 1, "", "is_updated"], [33, 4, 1, "", "name"], [33, 2, 1, "", "reset"]], "mlos_bench.tunables.tunable": [[34, 1, 1, "", "Tunable"]], "mlos_bench.tunables.tunable.Tunable": [[34, 4, 1, "", "categorical_values"], [34, 2, 1, "", "copy"], [34, 2, 1, "", "is_valid"], [34, 4, 1, "", "name"], [34, 4, 1, "", "range"], [34, 4, 1, "", "type"], [34, 4, 1, "", "value"]], "mlos_bench.tunables.tunable_groups": [[35, 1, 1, "", "TunableGroups"]], "mlos_bench.tunables.tunable_groups.TunableGroups": [[35, 2, 1, "", "assign"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "get_names"], [35, 2, 1, "", "get_param_values"], [35, 2, 1, "", "get_tunable"], [35, 2, 1, "", "is_updated"], [35, 2, 1, "", "reset"], [35, 2, 1, "", "subgroup"], [35, 2, 1, "", "update"]], "mlos_bench.util": [[36, 5, 1, "", "check_required_params"], [36, 5, 1, "", "instantiate_from_config"], [36, 5, 1, "", "prepare_class_load"]], "mlos_core": [[39, 0, 0, "-", "optimizers"], [43, 0, 0, "-", "spaces"]], "mlos_core.optimizers": [[39, 1, 1, "", "BaseOptimizer"], [39, 1, 1, "", "EmukitOptimizer"], [69, 1, 1, "", "OptimizerFactory"], [71, 1, 1, "", "OptimizerType"], [39, 1, 1, "", "RandomOptimizer"], [39, 1, 1, "", "SkoptOptimizer"], [40, 0, 0, "-", "bayesian_optimizers"], [41, 0, 0, "-", "optimizer"], [42, 0, 0, "-", "random_optimizer"]], "mlos_core.optimizers.BaseOptimizer": [[39, 2, 1, "", "get_best_observation"], [39, 2, 1, "", "get_observations"], [39, 2, 1, "", "register"], [39, 2, 1, "", "register_pending"], [39, 4, 1, "", "space_adapter"], [39, 2, 1, "", "suggest"]], "mlos_core.optimizers.EmukitOptimizer": [[39, 2, 1, "", "acquisition_function"], [39, 2, 1, "", "register_pending"], [39, 2, 1, "", "surrogate_predict"]], "mlos_core.optimizers.OptimizerFactory": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "create"]], "mlos_core.optimizers.OptimizerType": [[71, 3, 1, "", "EMUKIT"], [71, 3, 1, "", "RANDOM"], [71, 3, 1, "", "SKOPT"], [71, 2, 1, "", "__init__"]], "mlos_core.optimizers.RandomOptimizer": [[39, 2, 1, "", "register_pending"]], "mlos_core.optimizers.SkoptOptimizer": [[39, 2, 1, "", "acquisition_function"], [39, 2, 1, "", "register_pending"], [39, 2, 1, "", "surrogate_predict"]], "mlos_core.optimizers.bayesian_optimizers": [[72, 1, 1, "", "BaseBayesianOptimizer"], [73, 1, 1, "", "EmukitOptimizer"], [74, 1, 1, "", "SkoptOptimizer"]], "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "acquisition_function"], [72, 2, 1, "", "surrogate_predict"]], "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "acquisition_function"], [73, 2, 1, "", "register_pending"], [73, 2, 1, "", "surrogate_predict"]], "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "acquisition_function"], [74, 2, 1, "", "register_pending"], [74, 2, 1, "", "surrogate_predict"]], "mlos_core.optimizers.optimizer": [[75, 1, 1, "", "BaseOptimizer"]], "mlos_core.optimizers.optimizer.BaseOptimizer": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "get_best_observation"], [75, 2, 1, "", "get_observations"], [75, 2, 1, "", "register"], [75, 2, 1, "", "register_pending"], [75, 4, 1, "", "space_adapter"], [75, 2, 1, "", "suggest"]], "mlos_core.optimizers.random_optimizer": [[76, 1, 1, "", "RandomOptimizer"]], "mlos_core.optimizers.random_optimizer.RandomOptimizer": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "register_pending"]], "mlos_core.spaces": [[44, 0, 0, "-", "adapters"], [82, 5, 1, "", "configspace_to_emukit_space"], [83, 5, 1, "", "configspace_to_skopt_space"]], "mlos_core.spaces.adapters": [[44, 1, 1, "", "IdentityAdapter"], [44, 1, 1, "", "LlamaTuneAdapter"], [77, 1, 1, "", "SpaceAdapterFactory"], [79, 1, 1, "", "SpaceAdapterType"], [45, 0, 0, "-", "adapter"], [46, 0, 0, "-", "identity_adapter"], [47, 0, 0, "-", "llamatune"]], "mlos_core.spaces.adapters.IdentityAdapter": [[44, 2, 1, "", "inverse_transform"], [44, 4, 1, "", "target_parameter_space"], [44, 2, 1, "", "transform"]], "mlos_core.spaces.adapters.LlamaTuneAdapter": [[44, 3, 1, "", "DEFAULT_MAX_UNIQUE_VALUES_PER_PARAM"], [44, 3, 1, "", "DEFAULT_NUM_LOW_DIMS"], [44, 3, 1, "", "DEFAULT_SPECIAL_PARAM_VALUE_BIASING_PERCENTAGE"], [44, 2, 1, "", "inverse_transform"], [44, 4, 1, "", "target_parameter_space"], [44, 2, 1, "", "transform"]], "mlos_core.spaces.adapters.SpaceAdapterFactory": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "create"]], "mlos_core.spaces.adapters.SpaceAdapterType": [[79, 3, 1, "", "IDENTITY"], [79, 3, 1, "", "LLAMATUNE"], [79, 2, 1, "", "__init__"]], "mlos_core.spaces.adapters.adapter": [[80, 1, 1, "", "BaseSpaceAdapter"]], "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "inverse_transform"], [80, 4, 1, "", "orig_parameter_space"], [80, 4, 1, "", "target_parameter_space"], [80, 2, 1, "", "transform"]], "mlos_core.spaces.adapters.identity_adapter": [[46, 1, 1, "", "IdentityAdapter"]], "mlos_core.spaces.adapters.identity_adapter.IdentityAdapter": [[46, 2, 1, "", "inverse_transform"], [46, 4, 1, "", "target_parameter_space"], [46, 2, 1, "", "transform"]], "mlos_core.spaces.adapters.llamatune": [[81, 1, 1, "", "LlamaTuneAdapter"]], "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter": [[81, 3, 1, "", "DEFAULT_MAX_UNIQUE_VALUES_PER_PARAM"], [81, 3, 1, "", "DEFAULT_NUM_LOW_DIMS"], [81, 3, 1, "", "DEFAULT_SPECIAL_PARAM_VALUE_BIASING_PERCENTAGE"], [81, 2, 1, "", "__init__"], [81, 2, 1, "", "inverse_transform"], [81, 4, 1, "", "target_parameter_space"], [81, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"mlos_bench": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 84], "packag": [0, 1, 4, 8, 14, 21, 25, 27, 28, 31, 32, 38, 39, 43, 44], "subpackag": [0, 1, 21, 27, 38, 43], "submodul": [0, 1, 4, 8, 14, 21, 25, 28, 32, 39, 44], "environ": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 49, 50, 51, 52, 53, 54, 55, 56, 57, 86], "base_environ": 2, "modul": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 29, 30, 33, 34, 35, 36, 40, 41, 42, 45, 46, 47], "composite_env": 3, "local": [4, 5, 6, 25, 26, 53, 54, 64, 86], "local_env": 5, "local_env_fileshar": 6, "mock_env": 7, "remot": [8, 9, 10, 11, 27, 28, 29, 30, 31, 55, 56, 57, 65, 66, 86], "os_env": 9, "remote_env": 10, "vm_env": 11, "statu": [12, 52], "launcher": 13, "optim": [14, 15, 16, 17, 18, 39, 40, 41, 42, 58, 59, 60, 69, 70, 71, 72, 73, 74, 75, 76, 86], "base_optim": 15, "convert_configspac": 16, "mlos_core_optim": 17, "mock_optim": 18, "run_bench": 19, "run_opt": 20, "servic": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 61, 62, 63, 64, 65, 66, 86], "base_fileshar": 22, "base_servic": 23, "config_persist": 24, "local_exec": 26, "azur": [28, 29, 30, 65, 66, 86], "azure_fileshar": 29, "azure_servic": 30, "ssh": 31, "tunabl": [32, 33, 34, 35, 67, 68, 86], "covariant_group": 33, "tunable_group": 35, "util": 36, "mlos_cor": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "bayesian_optim": [40, 72, 73, 74], "random_optim": [42, 76], "space": [43, 44, 45, 46, 47, 77, 78, 79, 80, 81, 82, 83, 86], "adapt": [44, 45, 46, 47, 77, 78, 79, 80, 81, 86], "identity_adapt": 46, "llamatun": [47, 81], "compositeenv": 49, "mockenv": 51, "localenv": 53, "localfileshareenv": 54, "osenv": 55, "remoteenv": 56, "vmenv": 57, "mloscoreoptim": 58, "mockoptim": 59, "configpersistenceservic": 61, "fileshareservic": 62, "localexecservic": 64, "azurefileshareservic": 65, "azurevmservic": 66, "tunablegroup": 68, "optimizerfactori": [69, 70], "creat": [70, 78], "optimizertyp": 71, "basebayesianoptim": 72, "emukitoptim": 73, "skoptoptim": 74, "baseoptim": 75, "randomoptim": 76, "spaceadapterfactori": [77, 78], "spaceadaptertyp": 79, "basespaceadapt": 80, "llamatuneadapt": 81, "configspace_to_emukit_spac": 82, "configspace_to_skopt_spac": 83, "welcom": 84, "mloscor": 84, "": 84, "document": 84, "see": 84, "also": 84, "instal": 85, "develop": 85, "devcontain": 85, "manual": 85, "distribut": 85, "mlo": 86, "core": 86, "api": 86, "bench": 86, "main": 86, "benchmark": 86, "paramet": 86, "mix": 86, "ins": 86}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"mlos_bench package": [[0, "module-mlos_bench"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [21, "subpackages"], [27, "subpackages"], [38, "subpackages"], [43, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [4, "submodules"], [8, "submodules"], [14, "submodules"], [21, "submodules"], [25, "submodules"], [28, "submodules"], [32, "submodules"], [39, "submodules"], [44, "submodules"]], "mlos_bench.environment package": [[1, "module-mlos_bench.environment"]], "mlos_bench.environment.base_environment module": [[2, "module-mlos_bench.environment.base_environment"]], "mlos_bench.environment.composite_env module": [[3, "module-mlos_bench.environment.composite_env"]], "mlos_bench.environment.local package": [[4, "module-mlos_bench.environment.local"]], "mlos_bench.environment.local.local_env module": [[5, "module-mlos_bench.environment.local.local_env"]], "mlos_bench.environment.local.local_env_fileshare module": [[6, "module-mlos_bench.environment.local.local_env_fileshare"]], "mlos_bench.environment.mock_env module": [[7, "module-mlos_bench.environment.mock_env"]], "mlos_bench.environment.remote package": [[8, "module-mlos_bench.environment.remote"]], "mlos_bench.environment.remote.os_env module": [[9, "module-mlos_bench.environment.remote.os_env"]], "mlos_bench.environment.remote.remote_env module": [[10, "module-mlos_bench.environment.remote.remote_env"]], "mlos_bench.environment.remote.vm_env module": [[11, "module-mlos_bench.environment.remote.vm_env"]], "mlos_bench.environment.status module": [[12, "module-mlos_bench.environment.status"]], "mlos_bench.launcher module": [[13, "module-mlos_bench.launcher"]], "mlos_bench.optimizer package": [[14, "module-mlos_bench.optimizer"]], "mlos_bench.optimizer.base_optimizer module": [[15, "module-mlos_bench.optimizer.base_optimizer"]], "mlos_bench.optimizer.convert_configspace module": [[16, "module-mlos_bench.optimizer.convert_configspace"]], "mlos_bench.optimizer.mlos_core_optimizer module": [[17, "module-mlos_bench.optimizer.mlos_core_optimizer"]], "mlos_bench.optimizer.mock_optimizer module": [[18, "module-mlos_bench.optimizer.mock_optimizer"]], "mlos_bench.run_bench module": [[19, "module-mlos_bench.run_bench"]], "mlos_bench.run_opt module": [[20, "module-mlos_bench.run_opt"]], "mlos_bench.service package": [[21, "module-mlos_bench.service"]], "mlos_bench.service.base_fileshare module": [[22, "module-mlos_bench.service.base_fileshare"]], "mlos_bench.service.base_service module": [[23, "module-mlos_bench.service.base_service"]], "mlos_bench.service.config_persistence module": [[24, "module-mlos_bench.service.config_persistence"]], "mlos_bench.service.local package": [[25, "module-mlos_bench.service.local"]], "mlos_bench.service.local.local_exec module": [[26, "module-mlos_bench.service.local.local_exec"]], "mlos_bench.service.remote package": [[27, "module-mlos_bench.service.remote"]], "mlos_bench.service.remote.azure package": [[28, "module-mlos_bench.service.remote.azure"]], "mlos_bench.service.remote.azure.azure_fileshare module": [[29, "module-mlos_bench.service.remote.azure.azure_fileshare"]], "mlos_bench.service.remote.azure.azure_services module": [[30, "module-mlos_bench.service.remote.azure.azure_services"]], "mlos_bench.service.remote.ssh package": [[31, "module-mlos_bench.service.remote.ssh"]], "mlos_bench.tunables package": [[32, "module-mlos_bench.tunables"]], "mlos_bench.tunables.covariant_group module": [[33, "module-mlos_bench.tunables.covariant_group"]], "mlos_bench.tunables.tunable module": [[34, "module-mlos_bench.tunables.tunable"]], "mlos_bench.tunables.tunable_groups module": [[35, "module-mlos_bench.tunables.tunable_groups"]], "mlos_bench.util module": [[36, "module-mlos_bench.util"]], "mlos_bench": [[37, "mlos-bench"], [84, "mlos-bench"]], "mlos_core package": [[38, "module-mlos_core"]], "mlos_core.optimizers package": [[39, "module-mlos_core.optimizers"]], "mlos_core.optimizers.bayesian_optimizers module": [[40, "module-mlos_core.optimizers.bayesian_optimizers"]], "mlos_core.optimizers.optimizer module": [[41, "module-mlos_core.optimizers.optimizer"]], "mlos_core.optimizers.random_optimizer module": [[42, "module-mlos_core.optimizers.random_optimizer"]], "mlos_core.spaces package": [[43, "module-mlos_core.spaces"]], "mlos_core.spaces.adapters package": [[44, "module-mlos_core.spaces.adapters"]], "mlos_core.spaces.adapters.adapter module": [[45, "module-mlos_core.spaces.adapters.adapter"]], "mlos_core.spaces.adapters.identity_adapter module": [[46, "module-mlos_core.spaces.adapters.identity_adapter"]], "mlos_core.spaces.adapters.llamatune module": [[47, "module-mlos_core.spaces.adapters.llamatune"]], "mlos_core": [[48, "mlos-core"], [84, "mlos-core"]], "mlos_bench.environment.CompositeEnv": [[49, "mlos-bench-environment-compositeenv"]], "mlos_bench.environment.Environment": [[50, "mlos-bench-environment-environment"]], "mlos_bench.environment.MockEnv": [[51, "mlos-bench-environment-mockenv"]], "mlos_bench.environment.Status": [[52, "mlos-bench-environment-status"]], "mlos_bench.environment.local.LocalEnv": [[53, "mlos-bench-environment-local-localenv"]], "mlos_bench.environment.local.LocalFileShareEnv": [[54, "mlos-bench-environment-local-localfileshareenv"]], "mlos_bench.environment.remote.OSEnv": [[55, "mlos-bench-environment-remote-osenv"]], "mlos_bench.environment.remote.RemoteEnv": [[56, "mlos-bench-environment-remote-remoteenv"]], "mlos_bench.environment.remote.VMEnv": [[57, "mlos-bench-environment-remote-vmenv"]], "mlos_bench.optimizer.MlosCoreOptimizer": [[58, "mlos-bench-optimizer-mloscoreoptimizer"]], "mlos_bench.optimizer.MockOptimizer": [[59, "mlos-bench-optimizer-mockoptimizer"]], "mlos_bench.optimizer.Optimizer": [[60, "mlos-bench-optimizer-optimizer"]], "mlos_bench.service.ConfigPersistenceService": [[61, "mlos-bench-service-configpersistenceservice"]], "mlos_bench.service.FileShareService": [[62, "mlos-bench-service-fileshareservice"]], "mlos_bench.service.Service": [[63, "mlos-bench-service-service"]], "mlos_bench.service.local.LocalExecService": [[64, "mlos-bench-service-local-localexecservice"]], "mlos_bench.service.remote.azure.AzureFileShareService": [[65, "mlos-bench-service-remote-azure-azurefileshareservice"]], "mlos_bench.service.remote.azure.AzureVMService": [[66, "mlos-bench-service-remote-azure-azurevmservice"]], "mlos_bench.tunables.Tunable": [[67, "mlos-bench-tunables-tunable"]], "mlos_bench.tunables.TunableGroups": [[68, "mlos-bench-tunables-tunablegroups"]], "mlos_core.optimizers.OptimizerFactory": [[69, "mlos-core-optimizers-optimizerfactory"]], "mlos_core.optimizers.OptimizerFactory.create": [[70, "mlos-core-optimizers-optimizerfactory-create"]], "mlos_core.optimizers.OptimizerType": [[71, "mlos-core-optimizers-optimizertype"]], "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer": [[72, "mlos-core-optimizers-bayesian-optimizers-basebayesianoptimizer"]], "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer": [[73, "mlos-core-optimizers-bayesian-optimizers-emukitoptimizer"]], "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer": [[74, "mlos-core-optimizers-bayesian-optimizers-skoptoptimizer"]], "mlos_core.optimizers.optimizer.BaseOptimizer": [[75, "mlos-core-optimizers-optimizer-baseoptimizer"]], "mlos_core.optimizers.random_optimizer.RandomOptimizer": [[76, "mlos-core-optimizers-random-optimizer-randomoptimizer"]], "mlos_core.spaces.adapters.SpaceAdapterFactory": [[77, "mlos-core-spaces-adapters-spaceadapterfactory"]], "mlos_core.spaces.adapters.SpaceAdapterFactory.create": [[78, "mlos-core-spaces-adapters-spaceadapterfactory-create"]], "mlos_core.spaces.adapters.SpaceAdapterType": [[79, "mlos-core-spaces-adapters-spaceadaptertype"]], "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter": [[80, "mlos-core-spaces-adapters-adapter-basespaceadapter"]], "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter": [[81, "mlos-core-spaces-adapters-llamatune-llamatuneadapter"]], "mlos_core.spaces.configspace_to_emukit_space": [[82, "mlos-core-spaces-configspace-to-emukit-space"]], "mlos_core.spaces.configspace_to_skopt_space": [[83, "mlos-core-spaces-configspace-to-skopt-space"]], "Welcome to MlosCore\u2019s documentation!": [[84, "welcome-to-mloscore-s-documentation"]], "See Also": [[84, "see-also"]], "Installation": [[85, "installation"]], "Development": [[85, "development"]], "Devcontainer": [[85, "devcontainer"]], "Manually": [[85, "manually"]], "Distributing": [[85, "distributing"]], "mlos-core API": [[86, "mlos-core-api"]], "Optimizers": [[86, "optimizers"]], "Spaces": [[86, "spaces"]], "Space Adapters": [[86, "space-adapters"]], "mlos-bench API": [[86, "mlos-bench-api"]], "Main": [[86, "main"]], "Benchmark Environments": [[86, "benchmark-environments"]], "Local Environments": [[86, "local-environments"]], "Remote Environments": [[86, "remote-environments"]], "Tunable Parameters": [[86, "tunable-parameters"]], "Service Mix-ins": [[86, "service-mix-ins"]], "Local Services": [[86, "local-services"]], "Remote Azure Services": [[86, "remote-azure-services"]], "Optimizer Adapters": [[86, "optimizer-adapters"]]}, "indexentries": {"mlos_bench": [[0, "module-mlos_bench"]], "module": [[0, "module-mlos_bench"], [1, "module-mlos_bench.environment"], [2, "module-mlos_bench.environment.base_environment"], [3, "module-mlos_bench.environment.composite_env"], [4, "module-mlos_bench.environment.local"], [5, "module-mlos_bench.environment.local.local_env"], [6, "module-mlos_bench.environment.local.local_env_fileshare"], [7, "module-mlos_bench.environment.mock_env"], [8, "module-mlos_bench.environment.remote"], [9, "module-mlos_bench.environment.remote.os_env"], [10, "module-mlos_bench.environment.remote.remote_env"], [11, "module-mlos_bench.environment.remote.vm_env"], [12, "module-mlos_bench.environment.status"], [13, "module-mlos_bench.launcher"], [14, "module-mlos_bench.optimizer"], [15, "module-mlos_bench.optimizer.base_optimizer"], [16, "module-mlos_bench.optimizer.convert_configspace"], [17, "module-mlos_bench.optimizer.mlos_core_optimizer"], [18, "module-mlos_bench.optimizer.mock_optimizer"], [19, "module-mlos_bench.run_bench"], [20, "module-mlos_bench.run_opt"], [21, "module-mlos_bench.service"], [22, "module-mlos_bench.service.base_fileshare"], [23, "module-mlos_bench.service.base_service"], [24, "module-mlos_bench.service.config_persistence"], [25, "module-mlos_bench.service.local"], [26, "module-mlos_bench.service.local.local_exec"], [27, "module-mlos_bench.service.remote"], [28, "module-mlos_bench.service.remote.azure"], [29, "module-mlos_bench.service.remote.azure.azure_fileshare"], [30, "module-mlos_bench.service.remote.azure.azure_services"], [31, "module-mlos_bench.service.remote.ssh"], [32, "module-mlos_bench.tunables"], [33, "module-mlos_bench.tunables.covariant_group"], [34, "module-mlos_bench.tunables.tunable"], [35, "module-mlos_bench.tunables.tunable_groups"], [36, "module-mlos_bench.util"], [38, "module-mlos_core"], [39, "module-mlos_core.optimizers"], [40, "module-mlos_core.optimizers.bayesian_optimizers"], [41, "module-mlos_core.optimizers.optimizer"], [42, "module-mlos_core.optimizers.random_optimizer"], [43, "module-mlos_core.spaces"], [44, "module-mlos_core.spaces.adapters"], [45, "module-mlos_core.spaces.adapters.adapter"], [46, "module-mlos_core.spaces.adapters.identity_adapter"], [47, "module-mlos_core.spaces.adapters.llamatune"]], "canceled (mlos_bench.environment.status attribute)": [[1, "mlos_bench.environment.Status.CANCELED"], [52, "mlos_bench.environment.Status.CANCELED"]], "compositeenv (class in mlos_bench.environment)": [[1, "mlos_bench.environment.CompositeEnv"], [49, "mlos_bench.environment.CompositeEnv"]], "environment (class in mlos_bench.environment)": [[1, "mlos_bench.environment.Environment"], [50, "mlos_bench.environment.Environment"]], "failed (mlos_bench.environment.status attribute)": [[1, "mlos_bench.environment.Status.FAILED"], [52, "mlos_bench.environment.Status.FAILED"]], "localenv (class in mlos_bench.environment)": [[1, "mlos_bench.environment.LocalEnv"]], "localfileshareenv (class in mlos_bench.environment)": [[1, "mlos_bench.environment.LocalFileShareEnv"]], "mockenv (class in mlos_bench.environment)": [[1, "mlos_bench.environment.MockEnv"], [51, "mlos_bench.environment.MockEnv"]], "pending (mlos_bench.environment.status attribute)": [[1, "mlos_bench.environment.Status.PENDING"], [52, "mlos_bench.environment.Status.PENDING"]], "ready (mlos_bench.environment.status attribute)": [[1, "mlos_bench.environment.Status.READY"], [52, "mlos_bench.environment.Status.READY"]], "running (mlos_bench.environment.status attribute)": [[1, "mlos_bench.environment.Status.RUNNING"], [52, "mlos_bench.environment.Status.RUNNING"]], "remoteenv (class in mlos_bench.environment)": [[1, "mlos_bench.environment.RemoteEnv"]], "succeeded (mlos_bench.environment.status attribute)": [[1, "mlos_bench.environment.Status.SUCCEEDED"], [52, "mlos_bench.environment.Status.SUCCEEDED"]], "status (class in mlos_bench.environment)": [[1, "mlos_bench.environment.Status"], [52, "mlos_bench.environment.Status"]], "timed_out (mlos_bench.environment.status attribute)": [[1, "mlos_bench.environment.Status.TIMED_OUT"], [52, "mlos_bench.environment.Status.TIMED_OUT"]], "unknown (mlos_bench.environment.status attribute)": [[1, "mlos_bench.environment.Status.UNKNOWN"], [52, "mlos_bench.environment.Status.UNKNOWN"]], "is_canceled (mlos_bench.environment.status property)": [[1, "mlos_bench.environment.Status.is_canceled"], [52, "mlos_bench.environment.Status.is_canceled"]], "is_failed (mlos_bench.environment.status property)": [[1, "mlos_bench.environment.Status.is_failed"], [52, "mlos_bench.environment.Status.is_failed"]], "is_good (mlos_bench.environment.status property)": [[1, "mlos_bench.environment.Status.is_good"], [52, "mlos_bench.environment.Status.is_good"]], "is_pending (mlos_bench.environment.status property)": [[1, "mlos_bench.environment.Status.is_pending"], [52, "mlos_bench.environment.Status.is_pending"]], "is_ready (mlos_bench.environment.status property)": [[1, "mlos_bench.environment.Status.is_ready"], [52, "mlos_bench.environment.Status.is_ready"]], "is_succeeded (mlos_bench.environment.status property)": [[1, "mlos_bench.environment.Status.is_succeeded"], [52, "mlos_bench.environment.Status.is_succeeded"]], "is_timed_out (mlos_bench.environment.status property)": [[1, "mlos_bench.environment.Status.is_timed_out"], [52, "mlos_bench.environment.Status.is_timed_out"]], "mlos_bench.environment": [[1, "module-mlos_bench.environment"]], "new() (mlos_bench.environment.environment class method)": [[1, "mlos_bench.environment.Environment.new"], [50, "mlos_bench.environment.Environment.new"]], "run() (mlos_bench.environment.compositeenv method)": [[1, "mlos_bench.environment.CompositeEnv.run"], [49, "mlos_bench.environment.CompositeEnv.run"]], "run() (mlos_bench.environment.environment method)": [[1, "mlos_bench.environment.Environment.run"], [50, "mlos_bench.environment.Environment.run"]], "run() (mlos_bench.environment.localenv method)": [[1, "mlos_bench.environment.LocalEnv.run"]], "run() (mlos_bench.environment.localfileshareenv method)": [[1, "mlos_bench.environment.LocalFileShareEnv.run"]], "run() (mlos_bench.environment.mockenv method)": [[1, "mlos_bench.environment.MockEnv.run"], [51, "mlos_bench.environment.MockEnv.run"]], "run() (mlos_bench.environment.remoteenv method)": [[1, "mlos_bench.environment.RemoteEnv.run"]], "setup() (mlos_bench.environment.compositeenv method)": [[1, "mlos_bench.environment.CompositeEnv.setup"], [49, "mlos_bench.environment.CompositeEnv.setup"]], "setup() (mlos_bench.environment.environment method)": [[1, "mlos_bench.environment.Environment.setup"], [50, "mlos_bench.environment.Environment.setup"]], "setup() (mlos_bench.environment.localenv method)": [[1, "mlos_bench.environment.LocalEnv.setup"]], "setup() (mlos_bench.environment.localfileshareenv method)": [[1, "mlos_bench.environment.LocalFileShareEnv.setup"]], "setup() (mlos_bench.environment.remoteenv method)": [[1, "mlos_bench.environment.RemoteEnv.setup"]], "status() (mlos_bench.environment.environment method)": [[1, "mlos_bench.environment.Environment.status"], [50, "mlos_bench.environment.Environment.status"]], "teardown() (mlos_bench.environment.compositeenv method)": [[1, "mlos_bench.environment.CompositeEnv.teardown"], [49, "mlos_bench.environment.CompositeEnv.teardown"]], "teardown() (mlos_bench.environment.environment method)": [[1, "mlos_bench.environment.Environment.teardown"], [50, "mlos_bench.environment.Environment.teardown"]], "teardown() (mlos_bench.environment.localenv method)": [[1, "mlos_bench.environment.LocalEnv.teardown"]], "teardown() (mlos_bench.environment.remoteenv method)": [[1, "mlos_bench.environment.RemoteEnv.teardown"]], "tunable_params() (mlos_bench.environment.environment method)": [[1, "mlos_bench.environment.Environment.tunable_params"], [50, "mlos_bench.environment.Environment.tunable_params"]], "environment (class in mlos_bench.environment.base_environment)": [[2, "mlos_bench.environment.base_environment.Environment"]], "mlos_bench.environment.base_environment": [[2, "module-mlos_bench.environment.base_environment"]], "new() (mlos_bench.environment.base_environment.environment class method)": [[2, "mlos_bench.environment.base_environment.Environment.new"]], "run() (mlos_bench.environment.base_environment.environment method)": [[2, "mlos_bench.environment.base_environment.Environment.run"]], "setup() (mlos_bench.environment.base_environment.environment method)": [[2, "mlos_bench.environment.base_environment.Environment.setup"]], "status() (mlos_bench.environment.base_environment.environment method)": [[2, "mlos_bench.environment.base_environment.Environment.status"]], "teardown() (mlos_bench.environment.base_environment.environment method)": [[2, "mlos_bench.environment.base_environment.Environment.teardown"]], "tunable_params() (mlos_bench.environment.base_environment.environment method)": [[2, "mlos_bench.environment.base_environment.Environment.tunable_params"]], "compositeenv (class in mlos_bench.environment.composite_env)": [[3, "mlos_bench.environment.composite_env.CompositeEnv"]], "mlos_bench.environment.composite_env": [[3, "module-mlos_bench.environment.composite_env"]], "run() (mlos_bench.environment.composite_env.compositeenv method)": [[3, "mlos_bench.environment.composite_env.CompositeEnv.run"]], "setup() (mlos_bench.environment.composite_env.compositeenv method)": [[3, "mlos_bench.environment.composite_env.CompositeEnv.setup"]], "teardown() (mlos_bench.environment.composite_env.compositeenv method)": [[3, "mlos_bench.environment.composite_env.CompositeEnv.teardown"]], "localenv (class in mlos_bench.environment.local)": [[4, "mlos_bench.environment.local.LocalEnv"], [53, "mlos_bench.environment.local.LocalEnv"]], "localfileshareenv (class in mlos_bench.environment.local)": [[4, "mlos_bench.environment.local.LocalFileShareEnv"], [54, "mlos_bench.environment.local.LocalFileShareEnv"]], "mlos_bench.environment.local": [[4, "module-mlos_bench.environment.local"]], "run() (mlos_bench.environment.local.localenv method)": [[4, "mlos_bench.environment.local.LocalEnv.run"], [53, "mlos_bench.environment.local.LocalEnv.run"]], "run() (mlos_bench.environment.local.localfileshareenv method)": [[4, "mlos_bench.environment.local.LocalFileShareEnv.run"], [54, "mlos_bench.environment.local.LocalFileShareEnv.run"]], "setup() (mlos_bench.environment.local.localenv method)": [[4, "mlos_bench.environment.local.LocalEnv.setup"], [53, "mlos_bench.environment.local.LocalEnv.setup"]], "setup() (mlos_bench.environment.local.localfileshareenv method)": [[4, "mlos_bench.environment.local.LocalFileShareEnv.setup"], [54, "mlos_bench.environment.local.LocalFileShareEnv.setup"]], "teardown() (mlos_bench.environment.local.localenv method)": [[4, "mlos_bench.environment.local.LocalEnv.teardown"], [53, "mlos_bench.environment.local.LocalEnv.teardown"]], "localenv (class in mlos_bench.environment.local.local_env)": [[5, "mlos_bench.environment.local.local_env.LocalEnv"]], "mlos_bench.environment.local.local_env": [[5, "module-mlos_bench.environment.local.local_env"]], "run() (mlos_bench.environment.local.local_env.localenv method)": [[5, "mlos_bench.environment.local.local_env.LocalEnv.run"]], "setup() (mlos_bench.environment.local.local_env.localenv method)": [[5, "mlos_bench.environment.local.local_env.LocalEnv.setup"]], "teardown() (mlos_bench.environment.local.local_env.localenv method)": [[5, "mlos_bench.environment.local.local_env.LocalEnv.teardown"]], "localfileshareenv (class in mlos_bench.environment.local.local_env_fileshare)": [[6, "mlos_bench.environment.local.local_env_fileshare.LocalFileShareEnv"]], "mlos_bench.environment.local.local_env_fileshare": [[6, "module-mlos_bench.environment.local.local_env_fileshare"]], "run() (mlos_bench.environment.local.local_env_fileshare.localfileshareenv method)": [[6, "mlos_bench.environment.local.local_env_fileshare.LocalFileShareEnv.run"]], "setup() (mlos_bench.environment.local.local_env_fileshare.localfileshareenv method)": [[6, "mlos_bench.environment.local.local_env_fileshare.LocalFileShareEnv.setup"]], "mockenv (class in mlos_bench.environment.mock_env)": [[7, "mlos_bench.environment.mock_env.MockEnv"]], "mlos_bench.environment.mock_env": [[7, "module-mlos_bench.environment.mock_env"]], "run() (mlos_bench.environment.mock_env.mockenv method)": [[7, "mlos_bench.environment.mock_env.MockEnv.run"]], "osenv (class in mlos_bench.environment.remote)": [[8, "mlos_bench.environment.remote.OSEnv"], [55, "mlos_bench.environment.remote.OSEnv"]], "remoteenv (class in mlos_bench.environment.remote)": [[8, "mlos_bench.environment.remote.RemoteEnv"], [56, "mlos_bench.environment.remote.RemoteEnv"]], "vmenv (class in mlos_bench.environment.remote)": [[8, "mlos_bench.environment.remote.VMEnv"], [57, "mlos_bench.environment.remote.VMEnv"]], "mlos_bench.environment.remote": [[8, "module-mlos_bench.environment.remote"]], "run() (mlos_bench.environment.remote.remoteenv method)": [[8, "mlos_bench.environment.remote.RemoteEnv.run"], [56, "mlos_bench.environment.remote.RemoteEnv.run"]], "setup() (mlos_bench.environment.remote.osenv method)": [[8, "mlos_bench.environment.remote.OSEnv.setup"], [55, "mlos_bench.environment.remote.OSEnv.setup"]], "setup() (mlos_bench.environment.remote.remoteenv method)": [[8, "mlos_bench.environment.remote.RemoteEnv.setup"], [56, "mlos_bench.environment.remote.RemoteEnv.setup"]], "setup() (mlos_bench.environment.remote.vmenv method)": [[8, "mlos_bench.environment.remote.VMEnv.setup"], [57, "mlos_bench.environment.remote.VMEnv.setup"]], "teardown() (mlos_bench.environment.remote.osenv method)": [[8, "mlos_bench.environment.remote.OSEnv.teardown"], [55, "mlos_bench.environment.remote.OSEnv.teardown"]], "teardown() (mlos_bench.environment.remote.remoteenv method)": [[8, "mlos_bench.environment.remote.RemoteEnv.teardown"], [56, "mlos_bench.environment.remote.RemoteEnv.teardown"]], "teardown() (mlos_bench.environment.remote.vmenv method)": [[8, "mlos_bench.environment.remote.VMEnv.teardown"], [57, "mlos_bench.environment.remote.VMEnv.teardown"]], "osenv (class in mlos_bench.environment.remote.os_env)": [[9, "mlos_bench.environment.remote.os_env.OSEnv"]], "mlos_bench.environment.remote.os_env": [[9, "module-mlos_bench.environment.remote.os_env"]], "setup() (mlos_bench.environment.remote.os_env.osenv method)": [[9, "mlos_bench.environment.remote.os_env.OSEnv.setup"]], "teardown() (mlos_bench.environment.remote.os_env.osenv method)": [[9, "mlos_bench.environment.remote.os_env.OSEnv.teardown"]], "remoteenv (class in mlos_bench.environment.remote.remote_env)": [[10, "mlos_bench.environment.remote.remote_env.RemoteEnv"]], "mlos_bench.environment.remote.remote_env": [[10, "module-mlos_bench.environment.remote.remote_env"]], "run() (mlos_bench.environment.remote.remote_env.remoteenv method)": [[10, "mlos_bench.environment.remote.remote_env.RemoteEnv.run"]], "setup() (mlos_bench.environment.remote.remote_env.remoteenv method)": [[10, "mlos_bench.environment.remote.remote_env.RemoteEnv.setup"]], "teardown() (mlos_bench.environment.remote.remote_env.remoteenv method)": [[10, "mlos_bench.environment.remote.remote_env.RemoteEnv.teardown"]], "vmenv (class in mlos_bench.environment.remote.vm_env)": [[11, "mlos_bench.environment.remote.vm_env.VMEnv"]], "mlos_bench.environment.remote.vm_env": [[11, "module-mlos_bench.environment.remote.vm_env"]], "setup() (mlos_bench.environment.remote.vm_env.vmenv method)": [[11, "mlos_bench.environment.remote.vm_env.VMEnv.setup"]], "teardown() (mlos_bench.environment.remote.vm_env.vmenv method)": [[11, "mlos_bench.environment.remote.vm_env.VMEnv.teardown"]], "canceled (mlos_bench.environment.status.status attribute)": [[12, "mlos_bench.environment.status.Status.CANCELED"]], "failed (mlos_bench.environment.status.status attribute)": [[12, "mlos_bench.environment.status.Status.FAILED"]], "pending (mlos_bench.environment.status.status attribute)": [[12, "mlos_bench.environment.status.Status.PENDING"]], "ready (mlos_bench.environment.status.status attribute)": [[12, "mlos_bench.environment.status.Status.READY"]], "running (mlos_bench.environment.status.status attribute)": [[12, "mlos_bench.environment.status.Status.RUNNING"]], "succeeded (mlos_bench.environment.status.status attribute)": [[12, "mlos_bench.environment.status.Status.SUCCEEDED"]], "status (class in mlos_bench.environment.status)": [[12, "mlos_bench.environment.status.Status"]], "timed_out (mlos_bench.environment.status.status attribute)": [[12, "mlos_bench.environment.status.Status.TIMED_OUT"]], "unknown (mlos_bench.environment.status.status attribute)": [[12, "mlos_bench.environment.status.Status.UNKNOWN"]], "is_canceled (mlos_bench.environment.status.status property)": [[12, "mlos_bench.environment.status.Status.is_canceled"]], "is_failed (mlos_bench.environment.status.status property)": [[12, "mlos_bench.environment.status.Status.is_failed"]], "is_good (mlos_bench.environment.status.status property)": [[12, "mlos_bench.environment.status.Status.is_good"]], "is_pending (mlos_bench.environment.status.status property)": [[12, "mlos_bench.environment.status.Status.is_pending"]], "is_ready (mlos_bench.environment.status.status property)": [[12, "mlos_bench.environment.status.Status.is_ready"]], "is_succeeded (mlos_bench.environment.status.status property)": [[12, "mlos_bench.environment.status.Status.is_succeeded"]], "is_timed_out (mlos_bench.environment.status.status property)": [[12, "mlos_bench.environment.status.Status.is_timed_out"]], "mlos_bench.environment.status": [[12, "module-mlos_bench.environment.status"]], "launcher (class in mlos_bench.launcher)": [[13, "mlos_bench.launcher.Launcher"]], "global_config (mlos_bench.launcher.launcher property)": [[13, "mlos_bench.launcher.Launcher.global_config"]], "load_config() (mlos_bench.launcher.launcher method)": [[13, "mlos_bench.launcher.Launcher.load_config"]], "load_env() (mlos_bench.launcher.launcher method)": [[13, "mlos_bench.launcher.Launcher.load_env"]], "mlos_bench.launcher": [[13, "module-mlos_bench.launcher"]], "parse_args() (mlos_bench.launcher.launcher method)": [[13, "mlos_bench.launcher.Launcher.parse_args"]], "parser (mlos_bench.launcher.launcher property)": [[13, "mlos_bench.launcher.Launcher.parser"]], "mloscoreoptimizer (class in mlos_bench.optimizer)": [[14, "mlos_bench.optimizer.MlosCoreOptimizer"], [58, "mlos_bench.optimizer.MlosCoreOptimizer"]], "mockoptimizer (class in mlos_bench.optimizer)": [[14, "mlos_bench.optimizer.MockOptimizer"], [59, "mlos_bench.optimizer.MockOptimizer"]], "optimizer (class in mlos_bench.optimizer)": [[14, "mlos_bench.optimizer.Optimizer"], [60, "mlos_bench.optimizer.Optimizer"]], "bulk_register() (mlos_bench.optimizer.mloscoreoptimizer method)": [[14, "mlos_bench.optimizer.MlosCoreOptimizer.bulk_register"], [58, "mlos_bench.optimizer.MlosCoreOptimizer.bulk_register"]], "bulk_register() (mlos_bench.optimizer.mockoptimizer method)": [[14, "mlos_bench.optimizer.MockOptimizer.bulk_register"], [59, "mlos_bench.optimizer.MockOptimizer.bulk_register"]], "bulk_register() (mlos_bench.optimizer.optimizer method)": [[14, "mlos_bench.optimizer.Optimizer.bulk_register"], [60, "mlos_bench.optimizer.Optimizer.bulk_register"]], "get_best_observation() (mlos_bench.optimizer.mloscoreoptimizer method)": [[14, "mlos_bench.optimizer.MlosCoreOptimizer.get_best_observation"], [58, "mlos_bench.optimizer.MlosCoreOptimizer.get_best_observation"]], "get_best_observation() (mlos_bench.optimizer.mockoptimizer method)": [[14, "mlos_bench.optimizer.MockOptimizer.get_best_observation"], [59, "mlos_bench.optimizer.MockOptimizer.get_best_observation"]], "get_best_observation() (mlos_bench.optimizer.optimizer method)": [[14, "mlos_bench.optimizer.Optimizer.get_best_observation"], [60, "mlos_bench.optimizer.Optimizer.get_best_observation"]], "load() (mlos_bench.optimizer.optimizer static method)": [[14, "mlos_bench.optimizer.Optimizer.load"], [60, "mlos_bench.optimizer.Optimizer.load"]], "mlos_bench.optimizer": [[14, "module-mlos_bench.optimizer"]], "new() (mlos_bench.optimizer.optimizer class method)": [[14, "mlos_bench.optimizer.Optimizer.new"], [60, "mlos_bench.optimizer.Optimizer.new"]], "not_converged() (mlos_bench.optimizer.optimizer method)": [[14, "mlos_bench.optimizer.Optimizer.not_converged"], [60, "mlos_bench.optimizer.Optimizer.not_converged"]], "register() (mlos_bench.optimizer.mloscoreoptimizer method)": [[14, "mlos_bench.optimizer.MlosCoreOptimizer.register"], [58, "mlos_bench.optimizer.MlosCoreOptimizer.register"]], "register() (mlos_bench.optimizer.mockoptimizer method)": [[14, "mlos_bench.optimizer.MockOptimizer.register"], [59, "mlos_bench.optimizer.MockOptimizer.register"]], "register() (mlos_bench.optimizer.optimizer method)": [[14, "mlos_bench.optimizer.Optimizer.register"], [60, "mlos_bench.optimizer.Optimizer.register"]], "suggest() (mlos_bench.optimizer.mloscoreoptimizer method)": [[14, "mlos_bench.optimizer.MlosCoreOptimizer.suggest"], [58, "mlos_bench.optimizer.MlosCoreOptimizer.suggest"]], "suggest() (mlos_bench.optimizer.mockoptimizer method)": [[14, "mlos_bench.optimizer.MockOptimizer.suggest"], [59, "mlos_bench.optimizer.MockOptimizer.suggest"]], "suggest() (mlos_bench.optimizer.optimizer method)": [[14, "mlos_bench.optimizer.Optimizer.suggest"], [60, "mlos_bench.optimizer.Optimizer.suggest"]], "target (mlos_bench.optimizer.optimizer property)": [[14, "mlos_bench.optimizer.Optimizer.target"], [60, "mlos_bench.optimizer.Optimizer.target"]], "optimizer (class in mlos_bench.optimizer.base_optimizer)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer"]], "bulk_register() (mlos_bench.optimizer.base_optimizer.optimizer method)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer.bulk_register"]], "get_best_observation() (mlos_bench.optimizer.base_optimizer.optimizer method)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer.get_best_observation"]], "load() (mlos_bench.optimizer.base_optimizer.optimizer static method)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer.load"]], "mlos_bench.optimizer.base_optimizer": [[15, "module-mlos_bench.optimizer.base_optimizer"]], "new() (mlos_bench.optimizer.base_optimizer.optimizer class method)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer.new"]], "not_converged() (mlos_bench.optimizer.base_optimizer.optimizer method)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer.not_converged"]], "register() (mlos_bench.optimizer.base_optimizer.optimizer method)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer.register"]], "suggest() (mlos_bench.optimizer.base_optimizer.optimizer method)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer.suggest"]], "target (mlos_bench.optimizer.base_optimizer.optimizer property)": [[15, "mlos_bench.optimizer.base_optimizer.Optimizer.target"]], "mlos_bench.optimizer.convert_configspace": [[16, "module-mlos_bench.optimizer.convert_configspace"]], "tunable_groups_to_configspace() (in module mlos_bench.optimizer.convert_configspace)": [[16, "mlos_bench.optimizer.convert_configspace.tunable_groups_to_configspace"]], "mloscoreoptimizer (class in mlos_bench.optimizer.mlos_core_optimizer)": [[17, "mlos_bench.optimizer.mlos_core_optimizer.MlosCoreOptimizer"]], "bulk_register() (mlos_bench.optimizer.mlos_core_optimizer.mloscoreoptimizer method)": [[17, "mlos_bench.optimizer.mlos_core_optimizer.MlosCoreOptimizer.bulk_register"]], "get_best_observation() (mlos_bench.optimizer.mlos_core_optimizer.mloscoreoptimizer method)": [[17, "mlos_bench.optimizer.mlos_core_optimizer.MlosCoreOptimizer.get_best_observation"]], "mlos_bench.optimizer.mlos_core_optimizer": [[17, "module-mlos_bench.optimizer.mlos_core_optimizer"]], "register() (mlos_bench.optimizer.mlos_core_optimizer.mloscoreoptimizer method)": [[17, "mlos_bench.optimizer.mlos_core_optimizer.MlosCoreOptimizer.register"]], "suggest() (mlos_bench.optimizer.mlos_core_optimizer.mloscoreoptimizer method)": [[17, "mlos_bench.optimizer.mlos_core_optimizer.MlosCoreOptimizer.suggest"]], "mockoptimizer (class in mlos_bench.optimizer.mock_optimizer)": [[18, "mlos_bench.optimizer.mock_optimizer.MockOptimizer"]], "bulk_register() (mlos_bench.optimizer.mock_optimizer.mockoptimizer method)": [[18, "mlos_bench.optimizer.mock_optimizer.MockOptimizer.bulk_register"]], "get_best_observation() (mlos_bench.optimizer.mock_optimizer.mockoptimizer method)": [[18, "mlos_bench.optimizer.mock_optimizer.MockOptimizer.get_best_observation"]], "mlos_bench.optimizer.mock_optimizer": [[18, "module-mlos_bench.optimizer.mock_optimizer"]], "register() (mlos_bench.optimizer.mock_optimizer.mockoptimizer method)": [[18, "mlos_bench.optimizer.mock_optimizer.MockOptimizer.register"]], "suggest() (mlos_bench.optimizer.mock_optimizer.mockoptimizer method)": [[18, "mlos_bench.optimizer.mock_optimizer.MockOptimizer.suggest"]], "mlos_bench.run_bench": [[19, "module-mlos_bench.run_bench"]], "mlos_bench.run_opt": [[20, "module-mlos_bench.run_opt"]], "configpersistenceservice (class in mlos_bench.service)": [[21, "mlos_bench.service.ConfigPersistenceService"], [61, "mlos_bench.service.ConfigPersistenceService"]], "fileshareservice (class in mlos_bench.service)": [[21, "mlos_bench.service.FileShareService"], [62, "mlos_bench.service.FileShareService"]], "localexecservice (class in mlos_bench.service)": [[21, "mlos_bench.service.LocalExecService"]], "service (class in mlos_bench.service)": [[21, "mlos_bench.service.Service"], [63, "mlos_bench.service.Service"]], "build_environment() (mlos_bench.service.configpersistenceservice method)": [[21, "mlos_bench.service.ConfigPersistenceService.build_environment"], [61, "mlos_bench.service.ConfigPersistenceService.build_environment"]], "build_service() (mlos_bench.service.configpersistenceservice class method)": [[21, "mlos_bench.service.ConfigPersistenceService.build_service"], [61, "mlos_bench.service.ConfigPersistenceService.build_service"]], "build_tunables() (mlos_bench.service.configpersistenceservice static method)": [[21, "mlos_bench.service.ConfigPersistenceService.build_tunables"], [61, "mlos_bench.service.ConfigPersistenceService.build_tunables"]], "download() (mlos_bench.service.fileshareservice method)": [[21, "mlos_bench.service.FileShareService.download"], [62, "mlos_bench.service.FileShareService.download"]], "export() (mlos_bench.service.service method)": [[21, "mlos_bench.service.Service.export"], [63, "mlos_bench.service.Service.export"]], "load_config() (mlos_bench.service.configpersistenceservice method)": [[21, "mlos_bench.service.ConfigPersistenceService.load_config"], [61, "mlos_bench.service.ConfigPersistenceService.load_config"]], "load_environment() (mlos_bench.service.configpersistenceservice method)": [[21, "mlos_bench.service.ConfigPersistenceService.load_environment"], [61, "mlos_bench.service.ConfigPersistenceService.load_environment"]], "load_environment_list() (mlos_bench.service.configpersistenceservice method)": [[21, "mlos_bench.service.ConfigPersistenceService.load_environment_list"], [61, "mlos_bench.service.ConfigPersistenceService.load_environment_list"]], "load_services() (mlos_bench.service.configpersistenceservice method)": [[21, "mlos_bench.service.ConfigPersistenceService.load_services"], [61, "mlos_bench.service.ConfigPersistenceService.load_services"]], "load_tunables() (mlos_bench.service.configpersistenceservice method)": [[21, "mlos_bench.service.ConfigPersistenceService.load_tunables"], [61, "mlos_bench.service.ConfigPersistenceService.load_tunables"]], "local_exec() (mlos_bench.service.localexecservice method)": [[21, "mlos_bench.service.LocalExecService.local_exec"]], "mlos_bench.service": [[21, "module-mlos_bench.service"]], "new() (mlos_bench.service.service class method)": [[21, "mlos_bench.service.Service.new"], [63, "mlos_bench.service.Service.new"]], "register() (mlos_bench.service.service method)": [[21, "mlos_bench.service.Service.register"], [63, "mlos_bench.service.Service.register"]], "resolve_path() (mlos_bench.service.configpersistenceservice method)": [[21, "mlos_bench.service.ConfigPersistenceService.resolve_path"], [61, "mlos_bench.service.ConfigPersistenceService.resolve_path"]], "temp_dir_context() (mlos_bench.service.localexecservice method)": [[21, "mlos_bench.service.LocalExecService.temp_dir_context"]], "upload() (mlos_bench.service.fileshareservice method)": [[21, "mlos_bench.service.FileShareService.upload"], [62, "mlos_bench.service.FileShareService.upload"]], "fileshareservice (class in mlos_bench.service.base_fileshare)": [[22, "mlos_bench.service.base_fileshare.FileShareService"]], "download() (mlos_bench.service.base_fileshare.fileshareservice method)": [[22, "mlos_bench.service.base_fileshare.FileShareService.download"]], "mlos_bench.service.base_fileshare": [[22, "module-mlos_bench.service.base_fileshare"]], "upload() (mlos_bench.service.base_fileshare.fileshareservice method)": [[22, "mlos_bench.service.base_fileshare.FileShareService.upload"]], "service (class in mlos_bench.service.base_service)": [[23, "mlos_bench.service.base_service.Service"]], "export() (mlos_bench.service.base_service.service method)": [[23, "mlos_bench.service.base_service.Service.export"]], "mlos_bench.service.base_service": [[23, "module-mlos_bench.service.base_service"]], "new() (mlos_bench.service.base_service.service class method)": [[23, "mlos_bench.service.base_service.Service.new"]], "register() (mlos_bench.service.base_service.service method)": [[23, "mlos_bench.service.base_service.Service.register"]], "configpersistenceservice (class in mlos_bench.service.config_persistence)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService"]], "build_environment() (mlos_bench.service.config_persistence.configpersistenceservice method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.build_environment"]], "build_service() (mlos_bench.service.config_persistence.configpersistenceservice class method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.build_service"]], "build_tunables() (mlos_bench.service.config_persistence.configpersistenceservice static method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.build_tunables"]], "load_config() (mlos_bench.service.config_persistence.configpersistenceservice method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.load_config"]], "load_environment() (mlos_bench.service.config_persistence.configpersistenceservice method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.load_environment"]], "load_environment_list() (mlos_bench.service.config_persistence.configpersistenceservice method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.load_environment_list"]], "load_services() (mlos_bench.service.config_persistence.configpersistenceservice method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.load_services"]], "load_tunables() (mlos_bench.service.config_persistence.configpersistenceservice method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.load_tunables"]], "mlos_bench.service.config_persistence": [[24, "module-mlos_bench.service.config_persistence"]], "resolve_path() (mlos_bench.service.config_persistence.configpersistenceservice method)": [[24, "mlos_bench.service.config_persistence.ConfigPersistenceService.resolve_path"]], "localexecservice (class in mlos_bench.service.local)": [[25, "mlos_bench.service.local.LocalExecService"], [64, "mlos_bench.service.local.LocalExecService"]], "local_exec() (mlos_bench.service.local.localexecservice method)": [[25, "mlos_bench.service.local.LocalExecService.local_exec"], [64, "mlos_bench.service.local.LocalExecService.local_exec"]], "mlos_bench.service.local": [[25, "module-mlos_bench.service.local"]], "temp_dir_context() (mlos_bench.service.local.localexecservice method)": [[25, "mlos_bench.service.local.LocalExecService.temp_dir_context"], [64, "mlos_bench.service.local.LocalExecService.temp_dir_context"]], "localexecservice (class in mlos_bench.service.local.local_exec)": [[26, "mlos_bench.service.local.local_exec.LocalExecService"]], "local_exec() (mlos_bench.service.local.local_exec.localexecservice method)": [[26, "mlos_bench.service.local.local_exec.LocalExecService.local_exec"]], "mlos_bench.service.local.local_exec": [[26, "module-mlos_bench.service.local.local_exec"]], "temp_dir_context() (mlos_bench.service.local.local_exec.localexecservice method)": [[26, "mlos_bench.service.local.local_exec.LocalExecService.temp_dir_context"]], "mlos_bench.service.remote": [[27, "module-mlos_bench.service.remote"]], "azurefileshareservice (class in mlos_bench.service.remote.azure)": [[28, "mlos_bench.service.remote.azure.AzureFileShareService"], [65, "mlos_bench.service.remote.azure.AzureFileShareService"]], "azurevmservice (class in mlos_bench.service.remote.azure)": [[28, "mlos_bench.service.remote.azure.AzureVMService"], [66, "mlos_bench.service.remote.azure.AzureVMService"]], "check_vm_operation_status() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.check_vm_operation_status"], [66, "mlos_bench.service.remote.azure.AzureVMService.check_vm_operation_status"]], "download() (mlos_bench.service.remote.azure.azurefileshareservice method)": [[28, "mlos_bench.service.remote.azure.AzureFileShareService.download"], [65, "mlos_bench.service.remote.azure.AzureFileShareService.download"]], "get_remote_exec_results() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.get_remote_exec_results"], [66, "mlos_bench.service.remote.azure.AzureVMService.get_remote_exec_results"]], "mlos_bench.service.remote.azure": [[28, "module-mlos_bench.service.remote.azure"]], "remote_exec() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.remote_exec"], [66, "mlos_bench.service.remote.azure.AzureVMService.remote_exec"]], "upload() (mlos_bench.service.remote.azure.azurefileshareservice method)": [[28, "mlos_bench.service.remote.azure.AzureFileShareService.upload"], [65, "mlos_bench.service.remote.azure.AzureFileShareService.upload"]], "vm_deprovision() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.vm_deprovision"], [66, "mlos_bench.service.remote.azure.AzureVMService.vm_deprovision"]], "vm_provision() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.vm_provision"], [66, "mlos_bench.service.remote.azure.AzureVMService.vm_provision"]], "vm_reboot() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.vm_reboot"], [66, "mlos_bench.service.remote.azure.AzureVMService.vm_reboot"]], "vm_start() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.vm_start"], [66, "mlos_bench.service.remote.azure.AzureVMService.vm_start"]], "vm_stop() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.vm_stop"], [66, "mlos_bench.service.remote.azure.AzureVMService.vm_stop"]], "wait_vm_deployment() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.wait_vm_deployment"], [66, "mlos_bench.service.remote.azure.AzureVMService.wait_vm_deployment"]], "wait_vm_operation() (mlos_bench.service.remote.azure.azurevmservice method)": [[28, "mlos_bench.service.remote.azure.AzureVMService.wait_vm_operation"], [66, "mlos_bench.service.remote.azure.AzureVMService.wait_vm_operation"]], "azurefileshareservice (class in mlos_bench.service.remote.azure.azure_fileshare)": [[29, "mlos_bench.service.remote.azure.azure_fileshare.AzureFileShareService"]], "download() (mlos_bench.service.remote.azure.azure_fileshare.azurefileshareservice method)": [[29, "mlos_bench.service.remote.azure.azure_fileshare.AzureFileShareService.download"]], "mlos_bench.service.remote.azure.azure_fileshare": [[29, "module-mlos_bench.service.remote.azure.azure_fileshare"]], "upload() (mlos_bench.service.remote.azure.azure_fileshare.azurefileshareservice method)": [[29, "mlos_bench.service.remote.azure.azure_fileshare.AzureFileShareService.upload"]], "azurevmservice (class in mlos_bench.service.remote.azure.azure_services)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService"]], "check_vm_operation_status() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.check_vm_operation_status"]], "get_remote_exec_results() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.get_remote_exec_results"]], "mlos_bench.service.remote.azure.azure_services": [[30, "module-mlos_bench.service.remote.azure.azure_services"]], "remote_exec() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.remote_exec"]], "vm_deprovision() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.vm_deprovision"]], "vm_provision() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.vm_provision"]], "vm_reboot() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.vm_reboot"]], "vm_start() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.vm_start"]], "vm_stop() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.vm_stop"]], "wait_vm_deployment() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.wait_vm_deployment"]], "wait_vm_operation() (mlos_bench.service.remote.azure.azure_services.azurevmservice method)": [[30, "mlos_bench.service.remote.azure.azure_services.AzureVMService.wait_vm_operation"]], "mlos_bench.service.remote.ssh": [[31, "module-mlos_bench.service.remote.ssh"]], "tunable (class in mlos_bench.tunables)": [[32, "mlos_bench.tunables.Tunable"], [67, "mlos_bench.tunables.Tunable"]], "tunablegroups (class in mlos_bench.tunables)": [[32, "mlos_bench.tunables.TunableGroups"], [68, "mlos_bench.tunables.TunableGroups"]], "assign() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.assign"], [68, "mlos_bench.tunables.TunableGroups.assign"]], "categorical_values (mlos_bench.tunables.tunable property)": [[32, "mlos_bench.tunables.Tunable.categorical_values"], [67, "mlos_bench.tunables.Tunable.categorical_values"]], "copy() (mlos_bench.tunables.tunable method)": [[32, "mlos_bench.tunables.Tunable.copy"], [67, "mlos_bench.tunables.Tunable.copy"]], "copy() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.copy"], [68, "mlos_bench.tunables.TunableGroups.copy"]], "get_names() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.get_names"], [68, "mlos_bench.tunables.TunableGroups.get_names"]], "get_param_values() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.get_param_values"], [68, "mlos_bench.tunables.TunableGroups.get_param_values"]], "get_tunable() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.get_tunable"], [68, "mlos_bench.tunables.TunableGroups.get_tunable"]], "is_updated() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.is_updated"], [68, "mlos_bench.tunables.TunableGroups.is_updated"]], "is_valid() (mlos_bench.tunables.tunable method)": [[32, "mlos_bench.tunables.Tunable.is_valid"], [67, "mlos_bench.tunables.Tunable.is_valid"]], "mlos_bench.tunables": [[32, "module-mlos_bench.tunables"]], "name (mlos_bench.tunables.tunable property)": [[32, "mlos_bench.tunables.Tunable.name"], [67, "mlos_bench.tunables.Tunable.name"]], "range (mlos_bench.tunables.tunable property)": [[32, "mlos_bench.tunables.Tunable.range"], [67, "mlos_bench.tunables.Tunable.range"]], "reset() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.reset"], [68, "mlos_bench.tunables.TunableGroups.reset"]], "subgroup() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.subgroup"], [68, "mlos_bench.tunables.TunableGroups.subgroup"]], "type (mlos_bench.tunables.tunable property)": [[32, "mlos_bench.tunables.Tunable.type"], [67, "mlos_bench.tunables.Tunable.type"]], "update() (mlos_bench.tunables.tunablegroups method)": [[32, "mlos_bench.tunables.TunableGroups.update"], [68, "mlos_bench.tunables.TunableGroups.update"]], "value (mlos_bench.tunables.tunable property)": [[32, "mlos_bench.tunables.Tunable.value"], [67, "mlos_bench.tunables.Tunable.value"]], "covarianttunablegroup (class in mlos_bench.tunables.covariant_group)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup"]], "copy() (mlos_bench.tunables.covariant_group.covarianttunablegroup method)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup.copy"]], "get_cost() (mlos_bench.tunables.covariant_group.covarianttunablegroup method)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup.get_cost"]], "get_names() (mlos_bench.tunables.covariant_group.covarianttunablegroup method)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup.get_names"]], "get_tunable() (mlos_bench.tunables.covariant_group.covarianttunablegroup method)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup.get_tunable"]], "get_values() (mlos_bench.tunables.covariant_group.covarianttunablegroup method)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup.get_values"]], "is_updated() (mlos_bench.tunables.covariant_group.covarianttunablegroup method)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup.is_updated"]], "mlos_bench.tunables.covariant_group": [[33, "module-mlos_bench.tunables.covariant_group"]], "name (mlos_bench.tunables.covariant_group.covarianttunablegroup property)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup.name"]], "reset() (mlos_bench.tunables.covariant_group.covarianttunablegroup method)": [[33, "mlos_bench.tunables.covariant_group.CovariantTunableGroup.reset"]], "tunable (class in mlos_bench.tunables.tunable)": [[34, "mlos_bench.tunables.tunable.Tunable"]], "categorical_values (mlos_bench.tunables.tunable.tunable property)": [[34, "mlos_bench.tunables.tunable.Tunable.categorical_values"]], "copy() (mlos_bench.tunables.tunable.tunable method)": [[34, "mlos_bench.tunables.tunable.Tunable.copy"]], "is_valid() (mlos_bench.tunables.tunable.tunable method)": [[34, "mlos_bench.tunables.tunable.Tunable.is_valid"]], "mlos_bench.tunables.tunable": [[34, "module-mlos_bench.tunables.tunable"]], "name (mlos_bench.tunables.tunable.tunable property)": [[34, "mlos_bench.tunables.tunable.Tunable.name"]], "range (mlos_bench.tunables.tunable.tunable property)": [[34, "mlos_bench.tunables.tunable.Tunable.range"]], "type (mlos_bench.tunables.tunable.tunable property)": [[34, "mlos_bench.tunables.tunable.Tunable.type"]], "value (mlos_bench.tunables.tunable.tunable property)": [[34, "mlos_bench.tunables.tunable.Tunable.value"]], "tunablegroups (class in mlos_bench.tunables.tunable_groups)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups"]], "assign() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.assign"]], "copy() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.copy"]], "get_names() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.get_names"]], "get_param_values() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.get_param_values"]], "get_tunable() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.get_tunable"]], "is_updated() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.is_updated"]], "mlos_bench.tunables.tunable_groups": [[35, "module-mlos_bench.tunables.tunable_groups"]], "reset() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.reset"]], "subgroup() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.subgroup"]], "update() (mlos_bench.tunables.tunable_groups.tunablegroups method)": [[35, "mlos_bench.tunables.tunable_groups.TunableGroups.update"]], "check_required_params() (in module mlos_bench.util)": [[36, "mlos_bench.util.check_required_params"]], "instantiate_from_config() (in module mlos_bench.util)": [[36, "mlos_bench.util.instantiate_from_config"]], "mlos_bench.util": [[36, "module-mlos_bench.util"]], "prepare_class_load() (in module mlos_bench.util)": [[36, "mlos_bench.util.prepare_class_load"]], "mlos_core": [[38, "module-mlos_core"]], "baseoptimizer (class in mlos_core.optimizers)": [[39, "mlos_core.optimizers.BaseOptimizer"]], "emukitoptimizer (class in mlos_core.optimizers)": [[39, "mlos_core.optimizers.EmukitOptimizer"]], "optimizerfactory (class in mlos_core.optimizers)": [[39, "mlos_core.optimizers.OptimizerFactory"], [69, "mlos_core.optimizers.OptimizerFactory"]], "randomoptimizer (class in mlos_core.optimizers)": [[39, "mlos_core.optimizers.RandomOptimizer"]], "skoptoptimizer (class in mlos_core.optimizers)": [[39, "mlos_core.optimizers.SkoptOptimizer"]], "acquisition_function() (mlos_core.optimizers.emukitoptimizer method)": [[39, "mlos_core.optimizers.EmukitOptimizer.acquisition_function"]], "acquisition_function() (mlos_core.optimizers.skoptoptimizer method)": [[39, "mlos_core.optimizers.SkoptOptimizer.acquisition_function"]], "create() (mlos_core.optimizers.optimizerfactory static method)": [[39, "mlos_core.optimizers.OptimizerFactory.create"], [69, "mlos_core.optimizers.OptimizerFactory.create"]], "get_best_observation() (mlos_core.optimizers.baseoptimizer method)": [[39, "mlos_core.optimizers.BaseOptimizer.get_best_observation"]], "get_observations() (mlos_core.optimizers.baseoptimizer method)": [[39, "mlos_core.optimizers.BaseOptimizer.get_observations"]], "mlos_core.optimizers": [[39, "module-mlos_core.optimizers"]], "register() (mlos_core.optimizers.baseoptimizer method)": [[39, "mlos_core.optimizers.BaseOptimizer.register"]], "register_pending() (mlos_core.optimizers.baseoptimizer method)": [[39, "mlos_core.optimizers.BaseOptimizer.register_pending"]], "register_pending() (mlos_core.optimizers.emukitoptimizer method)": [[39, "mlos_core.optimizers.EmukitOptimizer.register_pending"]], "register_pending() (mlos_core.optimizers.randomoptimizer method)": [[39, "mlos_core.optimizers.RandomOptimizer.register_pending"]], "register_pending() (mlos_core.optimizers.skoptoptimizer method)": [[39, "mlos_core.optimizers.SkoptOptimizer.register_pending"]], "space_adapter (mlos_core.optimizers.baseoptimizer property)": [[39, "mlos_core.optimizers.BaseOptimizer.space_adapter"]], "suggest() (mlos_core.optimizers.baseoptimizer method)": [[39, "mlos_core.optimizers.BaseOptimizer.suggest"]], "surrogate_predict() (mlos_core.optimizers.emukitoptimizer method)": [[39, "mlos_core.optimizers.EmukitOptimizer.surrogate_predict"]], "surrogate_predict() (mlos_core.optimizers.skoptoptimizer method)": [[39, "mlos_core.optimizers.SkoptOptimizer.surrogate_predict"]], "basebayesianoptimizer (class in mlos_core.optimizers.bayesian_optimizers)": [[40, "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer"], [72, "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer"]], "emukitoptimizer (class in mlos_core.optimizers.bayesian_optimizers)": [[40, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer"], [73, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer"]], "skoptoptimizer (class in mlos_core.optimizers.bayesian_optimizers)": [[40, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer"], [74, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer"]], "acquisition_function() (mlos_core.optimizers.bayesian_optimizers.basebayesianoptimizer method)": [[40, "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer.acquisition_function"], [72, "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer.acquisition_function"]], "acquisition_function() (mlos_core.optimizers.bayesian_optimizers.emukitoptimizer method)": [[40, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer.acquisition_function"], [73, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer.acquisition_function"]], "acquisition_function() (mlos_core.optimizers.bayesian_optimizers.skoptoptimizer method)": [[40, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer.acquisition_function"], [74, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer.acquisition_function"]], "mlos_core.optimizers.bayesian_optimizers": [[40, "module-mlos_core.optimizers.bayesian_optimizers"]], "register_pending() (mlos_core.optimizers.bayesian_optimizers.emukitoptimizer method)": [[40, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer.register_pending"], [73, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer.register_pending"]], "register_pending() (mlos_core.optimizers.bayesian_optimizers.skoptoptimizer method)": [[40, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer.register_pending"], [74, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer.register_pending"]], "surrogate_predict() (mlos_core.optimizers.bayesian_optimizers.basebayesianoptimizer method)": [[40, "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer.surrogate_predict"], [72, "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer.surrogate_predict"]], "surrogate_predict() (mlos_core.optimizers.bayesian_optimizers.emukitoptimizer method)": [[40, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer.surrogate_predict"], [73, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer.surrogate_predict"]], "surrogate_predict() (mlos_core.optimizers.bayesian_optimizers.skoptoptimizer method)": [[40, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer.surrogate_predict"], [74, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer.surrogate_predict"]], "baseoptimizer (class in mlos_core.optimizers.optimizer)": [[41, "mlos_core.optimizers.optimizer.BaseOptimizer"], [75, "mlos_core.optimizers.optimizer.BaseOptimizer"]], "get_best_observation() (mlos_core.optimizers.optimizer.baseoptimizer method)": [[41, "mlos_core.optimizers.optimizer.BaseOptimizer.get_best_observation"], [75, "mlos_core.optimizers.optimizer.BaseOptimizer.get_best_observation"]], "get_observations() (mlos_core.optimizers.optimizer.baseoptimizer method)": [[41, "mlos_core.optimizers.optimizer.BaseOptimizer.get_observations"], [75, "mlos_core.optimizers.optimizer.BaseOptimizer.get_observations"]], "mlos_core.optimizers.optimizer": [[41, "module-mlos_core.optimizers.optimizer"]], "register() (mlos_core.optimizers.optimizer.baseoptimizer method)": [[41, "mlos_core.optimizers.optimizer.BaseOptimizer.register"], [75, "mlos_core.optimizers.optimizer.BaseOptimizer.register"]], "register_pending() (mlos_core.optimizers.optimizer.baseoptimizer method)": [[41, "mlos_core.optimizers.optimizer.BaseOptimizer.register_pending"], [75, "mlos_core.optimizers.optimizer.BaseOptimizer.register_pending"]], "space_adapter (mlos_core.optimizers.optimizer.baseoptimizer property)": [[41, "mlos_core.optimizers.optimizer.BaseOptimizer.space_adapter"], [75, "mlos_core.optimizers.optimizer.BaseOptimizer.space_adapter"]], "suggest() (mlos_core.optimizers.optimizer.baseoptimizer method)": [[41, "mlos_core.optimizers.optimizer.BaseOptimizer.suggest"], [75, "mlos_core.optimizers.optimizer.BaseOptimizer.suggest"]], "randomoptimizer (class in mlos_core.optimizers.random_optimizer)": [[42, "mlos_core.optimizers.random_optimizer.RandomOptimizer"], [76, "mlos_core.optimizers.random_optimizer.RandomOptimizer"]], "mlos_core.optimizers.random_optimizer": [[42, "module-mlos_core.optimizers.random_optimizer"]], "register_pending() (mlos_core.optimizers.random_optimizer.randomoptimizer method)": [[42, "mlos_core.optimizers.random_optimizer.RandomOptimizer.register_pending"], [76, "mlos_core.optimizers.random_optimizer.RandomOptimizer.register_pending"]], "configspace_to_emukit_space() (in module mlos_core.spaces)": [[43, "mlos_core.spaces.configspace_to_emukit_space"], [82, "mlos_core.spaces.configspace_to_emukit_space"]], "configspace_to_skopt_space() (in module mlos_core.spaces)": [[43, "mlos_core.spaces.configspace_to_skopt_space"], [83, "mlos_core.spaces.configspace_to_skopt_space"]], "mlos_core.spaces": [[43, "module-mlos_core.spaces"]], "default_max_unique_values_per_param (mlos_core.spaces.adapters.llamatuneadapter attribute)": [[44, "mlos_core.spaces.adapters.LlamaTuneAdapter.DEFAULT_MAX_UNIQUE_VALUES_PER_PARAM"]], "default_num_low_dims (mlos_core.spaces.adapters.llamatuneadapter attribute)": [[44, "mlos_core.spaces.adapters.LlamaTuneAdapter.DEFAULT_NUM_LOW_DIMS"]], "default_special_param_value_biasing_percentage (mlos_core.spaces.adapters.llamatuneadapter attribute)": [[44, "mlos_core.spaces.adapters.LlamaTuneAdapter.DEFAULT_SPECIAL_PARAM_VALUE_BIASING_PERCENTAGE"]], "identityadapter (class in mlos_core.spaces.adapters)": [[44, "mlos_core.spaces.adapters.IdentityAdapter"]], "llamatuneadapter (class in mlos_core.spaces.adapters)": [[44, "mlos_core.spaces.adapters.LlamaTuneAdapter"]], "inverse_transform() (mlos_core.spaces.adapters.identityadapter method)": [[44, "mlos_core.spaces.adapters.IdentityAdapter.inverse_transform"]], "inverse_transform() (mlos_core.spaces.adapters.llamatuneadapter method)": [[44, "mlos_core.spaces.adapters.LlamaTuneAdapter.inverse_transform"]], "mlos_core.spaces.adapters": [[44, "module-mlos_core.spaces.adapters"]], "target_parameter_space (mlos_core.spaces.adapters.identityadapter property)": [[44, "mlos_core.spaces.adapters.IdentityAdapter.target_parameter_space"]], "target_parameter_space (mlos_core.spaces.adapters.llamatuneadapter property)": [[44, "mlos_core.spaces.adapters.LlamaTuneAdapter.target_parameter_space"]], "transform() (mlos_core.spaces.adapters.identityadapter method)": [[44, "mlos_core.spaces.adapters.IdentityAdapter.transform"]], "transform() (mlos_core.spaces.adapters.llamatuneadapter method)": [[44, "mlos_core.spaces.adapters.LlamaTuneAdapter.transform"]], "basespaceadapter (class in mlos_core.spaces.adapters.adapter)": [[45, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter"], [80, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter"]], "inverse_transform() (mlos_core.spaces.adapters.adapter.basespaceadapter method)": [[45, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.inverse_transform"], [80, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.inverse_transform"]], "mlos_core.spaces.adapters.adapter": [[45, "module-mlos_core.spaces.adapters.adapter"]], "orig_parameter_space (mlos_core.spaces.adapters.adapter.basespaceadapter property)": [[45, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.orig_parameter_space"], [80, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.orig_parameter_space"]], "target_parameter_space (mlos_core.spaces.adapters.adapter.basespaceadapter property)": [[45, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.target_parameter_space"], [80, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.target_parameter_space"]], "transform() (mlos_core.spaces.adapters.adapter.basespaceadapter method)": [[45, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.transform"], [80, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.transform"]], "identityadapter (class in mlos_core.spaces.adapters.identity_adapter)": [[46, "mlos_core.spaces.adapters.identity_adapter.IdentityAdapter"]], "inverse_transform() (mlos_core.spaces.adapters.identity_adapter.identityadapter method)": [[46, "mlos_core.spaces.adapters.identity_adapter.IdentityAdapter.inverse_transform"]], "mlos_core.spaces.adapters.identity_adapter": [[46, "module-mlos_core.spaces.adapters.identity_adapter"]], "target_parameter_space (mlos_core.spaces.adapters.identity_adapter.identityadapter property)": [[46, "mlos_core.spaces.adapters.identity_adapter.IdentityAdapter.target_parameter_space"]], "transform() (mlos_core.spaces.adapters.identity_adapter.identityadapter method)": [[46, "mlos_core.spaces.adapters.identity_adapter.IdentityAdapter.transform"]], "default_max_unique_values_per_param (mlos_core.spaces.adapters.llamatune.llamatuneadapter attribute)": [[47, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.DEFAULT_MAX_UNIQUE_VALUES_PER_PARAM"], [81, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.DEFAULT_MAX_UNIQUE_VALUES_PER_PARAM"]], "default_num_low_dims (mlos_core.spaces.adapters.llamatune.llamatuneadapter attribute)": [[47, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.DEFAULT_NUM_LOW_DIMS"], [81, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.DEFAULT_NUM_LOW_DIMS"]], "default_special_param_value_biasing_percentage (mlos_core.spaces.adapters.llamatune.llamatuneadapter attribute)": [[47, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.DEFAULT_SPECIAL_PARAM_VALUE_BIASING_PERCENTAGE"], [81, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.DEFAULT_SPECIAL_PARAM_VALUE_BIASING_PERCENTAGE"]], "llamatuneadapter (class in mlos_core.spaces.adapters.llamatune)": [[47, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter"], [81, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter"]], "inverse_transform() (mlos_core.spaces.adapters.llamatune.llamatuneadapter method)": [[47, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.inverse_transform"], [81, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.inverse_transform"]], "mlos_core.spaces.adapters.llamatune": [[47, "module-mlos_core.spaces.adapters.llamatune"]], "target_parameter_space (mlos_core.spaces.adapters.llamatune.llamatuneadapter property)": [[47, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.target_parameter_space"], [81, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.target_parameter_space"]], "transform() (mlos_core.spaces.adapters.llamatune.llamatuneadapter method)": [[47, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.transform"], [81, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.transform"]], "__init__() (mlos_bench.environment.compositeenv method)": [[49, "mlos_bench.environment.CompositeEnv.__init__"]], "__init__() (mlos_bench.environment.environment method)": [[50, "mlos_bench.environment.Environment.__init__"]], "__init__() (mlos_bench.environment.mockenv method)": [[51, "mlos_bench.environment.MockEnv.__init__"]], "__init__() (mlos_bench.environment.status method)": [[52, "mlos_bench.environment.Status.__init__"]], "__init__() (mlos_bench.environment.local.localenv method)": [[53, "mlos_bench.environment.local.LocalEnv.__init__"]], "__init__() (mlos_bench.environment.local.localfileshareenv method)": [[54, "mlos_bench.environment.local.LocalFileShareEnv.__init__"]], "__init__() (mlos_bench.environment.remote.osenv method)": [[55, "mlos_bench.environment.remote.OSEnv.__init__"]], "__init__() (mlos_bench.environment.remote.remoteenv method)": [[56, "mlos_bench.environment.remote.RemoteEnv.__init__"]], "__init__() (mlos_bench.environment.remote.vmenv method)": [[57, "mlos_bench.environment.remote.VMEnv.__init__"]], "__init__() (mlos_bench.optimizer.mloscoreoptimizer method)": [[58, "mlos_bench.optimizer.MlosCoreOptimizer.__init__"]], "__init__() (mlos_bench.optimizer.mockoptimizer method)": [[59, "mlos_bench.optimizer.MockOptimizer.__init__"]], "__init__() (mlos_bench.optimizer.optimizer method)": [[60, "mlos_bench.optimizer.Optimizer.__init__"]], "__init__() (mlos_bench.service.configpersistenceservice method)": [[61, "mlos_bench.service.ConfigPersistenceService.__init__"]], "__init__() (mlos_bench.service.fileshareservice method)": [[62, "mlos_bench.service.FileShareService.__init__"]], "__init__() (mlos_bench.service.service method)": [[63, "mlos_bench.service.Service.__init__"]], "__init__() (mlos_bench.service.local.localexecservice method)": [[64, "mlos_bench.service.local.LocalExecService.__init__"]], "__init__() (mlos_bench.service.remote.azure.azurefileshareservice method)": [[65, "mlos_bench.service.remote.azure.AzureFileShareService.__init__"]], "__init__() (mlos_bench.service.remote.azure.azurevmservice method)": [[66, "mlos_bench.service.remote.azure.AzureVMService.__init__"]], "__init__() (mlos_bench.tunables.tunable method)": [[67, "mlos_bench.tunables.Tunable.__init__"]], "__init__() (mlos_bench.tunables.tunablegroups method)": [[68, "mlos_bench.tunables.TunableGroups.__init__"]], "__init__() (mlos_core.optimizers.optimizerfactory method)": [[69, "mlos_core.optimizers.OptimizerFactory.__init__"]], "emukit (mlos_core.optimizers.optimizertype attribute)": [[71, "mlos_core.optimizers.OptimizerType.EMUKIT"]], "optimizertype (class in mlos_core.optimizers)": [[71, "mlos_core.optimizers.OptimizerType"]], "random (mlos_core.optimizers.optimizertype attribute)": [[71, "mlos_core.optimizers.OptimizerType.RANDOM"]], "skopt (mlos_core.optimizers.optimizertype attribute)": [[71, "mlos_core.optimizers.OptimizerType.SKOPT"]], "__init__() (mlos_core.optimizers.optimizertype method)": [[71, "mlos_core.optimizers.OptimizerType.__init__"]], "__init__() (mlos_core.optimizers.bayesian_optimizers.basebayesianoptimizer method)": [[72, "mlos_core.optimizers.bayesian_optimizers.BaseBayesianOptimizer.__init__"]], "__init__() (mlos_core.optimizers.bayesian_optimizers.emukitoptimizer method)": [[73, "mlos_core.optimizers.bayesian_optimizers.EmukitOptimizer.__init__"]], "__init__() (mlos_core.optimizers.bayesian_optimizers.skoptoptimizer method)": [[74, "mlos_core.optimizers.bayesian_optimizers.SkoptOptimizer.__init__"]], "__init__() (mlos_core.optimizers.optimizer.baseoptimizer method)": [[75, "mlos_core.optimizers.optimizer.BaseOptimizer.__init__"]], "__init__() (mlos_core.optimizers.random_optimizer.randomoptimizer method)": [[76, "mlos_core.optimizers.random_optimizer.RandomOptimizer.__init__"]], "spaceadapterfactory (class in mlos_core.spaces.adapters)": [[77, "mlos_core.spaces.adapters.SpaceAdapterFactory"]], "__init__() (mlos_core.spaces.adapters.spaceadapterfactory method)": [[77, "mlos_core.spaces.adapters.SpaceAdapterFactory.__init__"]], "create() (mlos_core.spaces.adapters.spaceadapterfactory static method)": [[77, "mlos_core.spaces.adapters.SpaceAdapterFactory.create"]], "identity (mlos_core.spaces.adapters.spaceadaptertype attribute)": [[79, "mlos_core.spaces.adapters.SpaceAdapterType.IDENTITY"]], "llamatune (mlos_core.spaces.adapters.spaceadaptertype attribute)": [[79, "mlos_core.spaces.adapters.SpaceAdapterType.LLAMATUNE"]], "spaceadaptertype (class in mlos_core.spaces.adapters)": [[79, "mlos_core.spaces.adapters.SpaceAdapterType"]], "__init__() (mlos_core.spaces.adapters.spaceadaptertype method)": [[79, "mlos_core.spaces.adapters.SpaceAdapterType.__init__"]], "__init__() (mlos_core.spaces.adapters.adapter.basespaceadapter method)": [[80, "mlos_core.spaces.adapters.adapter.BaseSpaceAdapter.__init__"]], "__init__() (mlos_core.spaces.adapters.llamatune.llamatuneadapter method)": [[81, "mlos_core.spaces.adapters.llamatune.LlamaTuneAdapter.__init__"]]}})